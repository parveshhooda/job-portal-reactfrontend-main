{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parve\\\\Desktop\\\\job portal cod\\\\job-portal-react-main\\\\src\\\\components\\\\applicant\\\\AvailableJobs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //components\n\nimport Navbar from \"./Navbar\";\nimport Job from \"./Job\";\nimport { viewJobFromServer } from \"../../Backend/sendRequestToServer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AvailableJobs() {\n  _s();\n\n  const [jobList, setJobList] = useState();\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    viewJobFromServer().then(jobList => {\n      if (jobList.status === 200) setJobList(jobList.result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-3 mb-4 text-center\",\n        children: \"Jobs Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row m-0\",\n        children: jobList ? jobList.map((job, index) => /*#__PURE__*/_jsxDEV(Job, {\n          job: job\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 43\n        }, this)) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AvailableJobs, \"AkOHB/TTe3Dh+1ZXVBfM8GgKe2s=\");\n\n_c = AvailableJobs;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableJobs\");","map":{"version":3,"sources":["C:/Users/parve/Desktop/job portal cod/job-portal-react-main/src/components/applicant/AvailableJobs.jsx"],"names":["React","useState","useEffect","Navbar","Job","viewJobFromServer","AvailableJobs","jobList","setJobList","loading","setLoading","then","status","result","map","job","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,iBAAT,QAAkC,mCAAlC;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,iBAAiB,GAAGM,IAApB,CAA0BJ,OAAD,IAAa;AACpC,UAAIA,OAAO,CAACK,MAAR,KAAmB,GAAvB,EAA4BJ,UAAU,CAACD,OAAO,CAACM,MAAT,CAAV;AAC7B,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBACGN,OAAO,GACJA,OAAO,CAACO,GAAR,CAAY,CAACC,GAAD,EAAMC,KAAN,kBAAgB,QAAC,GAAD;AAAK,UAAA,GAAG,EAAED;AAAV,WAAoBC,KAApB;AAAA;AAAA;AAAA;AAAA,gBAA5B,CADI,GAEJ;AAHN;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAvBuBV,a;;KAAAA,a","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n//components\nimport Navbar from \"./Navbar\";\nimport Job from \"./Job\";\nimport { viewJobFromServer } from \"../../Backend/sendRequestToServer\";\n\nexport default function AvailableJobs() {\n  const [jobList, setJobList] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    viewJobFromServer().then((jobList) => {\n      if (jobList.status === 200) setJobList(jobList.result);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container p-3\">\n        <h3 className=\"mt-3 mb-4 text-center\">Jobs Available</h3>\n        <div className=\"row m-0\">\n          {jobList\n            ? jobList.map((job, index) => <Job job={job} key={index} />)\n            : \"\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}