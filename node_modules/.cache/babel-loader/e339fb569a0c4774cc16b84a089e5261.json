{"ast":null,"code":"import _slicedToArray from\"C:/Users/parve/Desktop/job portal cod/job-portal-react-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Button}from\"@material-ui/core\";import React,{useEffect,useState}from\"react\";import{useHistory,useLocation}from\"react-router-dom\";import{Spinner}from\"reactstrap\";import{verifyUser}from\"../Backend/sendRequestToServer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var EmailVerification=function EmailVerification(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),success=_useState2[0],setSuccess=_useState2[1];var history=useHistory();var params=new URLSearchParams(window.location.search);useEffect(function(){var email=params.get(\"email\");var token=params.get(\"token\");console.log({email:email,token:token});verifyUser({emailId:email,token:token}).then(function(res){if(res.status===200){setSuccess(true);}else{setSuccess(false);}});},[]);return/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\"},children:success?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"You Are Verified! You can login now.\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:function onClick(e){history.push(\"/\");},children:\"Login\"})]}):success===false?/*#__PURE__*/_jsx(\"h3\",{children:\"You Are Not Verified.\"}):/*#__PURE__*/_jsx(Spinner,{color:\"primary\"})});};export default EmailVerification;","map":{"version":3,"sources":["C:/Users/parve/Desktop/job portal cod/job-portal-react-main/src/Common/EmailVerification.jsx"],"names":["Button","React","useEffect","useState","useHistory","useLocation","Spinner","verifyUser","EmailVerification","success","setSuccess","history","params","URLSearchParams","window","location","search","email","get","token","console","log","emailId","then","res","status","display","flexDirection","justifyContent","alignItems","e","push"],"mappings":"kLAAA,OAASA,MAAT,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,kBAAxC,CACA,OAASC,OAAT,KAAwB,YAAxB,CACA,OAASC,UAAT,KAA2B,gCAA3B,C,6IAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,cAA8BL,QAAQ,CAAC,IAAD,CAAtC,wCAAOM,OAAP,eAAgBC,UAAhB,eACA,GAAMC,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CACA,GAAMQ,CAAAA,MAAM,CAAG,GAAIC,CAAAA,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAAf,CACAd,SAAS,CAAC,UAAM,CACd,GAAMe,CAAAA,KAAK,CAAGL,MAAM,CAACM,GAAP,CAAW,OAAX,CAAd,CACA,GAAMC,CAAAA,KAAK,CAAGP,MAAM,CAACM,GAAP,CAAW,OAAX,CAAd,CACAE,OAAO,CAACC,GAAR,CAAY,CAAEJ,KAAK,CAALA,KAAF,CAASE,KAAK,CAALA,KAAT,CAAZ,EACAZ,UAAU,CAAC,CAAEe,OAAO,CAAEL,KAAX,CAAkBE,KAAK,CAAEA,KAAzB,CAAD,CAAV,CAA6CI,IAA7C,CAAkD,SAACC,GAAD,CAAS,CACzD,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACtBf,UAAU,CAAC,IAAD,CAAV,CACD,CAFD,IAEO,CACLA,UAAU,CAAC,KAAD,CAAV,CACD,CACF,CAND,EAOD,CAXQ,CAWN,EAXM,CAAT,CAaA,mBACE,YACE,KAAK,CAAE,CACLgB,OAAO,CAAE,MADJ,CAELC,aAAa,CAAE,QAFV,CAILC,cAAc,CAAE,QAJX,CAKLC,UAAU,CAAE,QALP,CADT,UASGpB,OAAO,cACN,wCACE,4DADF,cAEE,KAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,KAAK,CAAC,SAFR,CAGE,OAAO,CAAE,iBAACqB,CAAD,CAAO,CACdnB,OAAO,CAACoB,IAAR,CAAa,GAAb,EACD,CALH,mBAFF,GADM,CAaJtB,OAAO,GAAK,KAAZ,cACF,6CADE,cAGF,KAAC,OAAD,EAAS,KAAK,CAAC,SAAf,EAzBJ,EADF,CA8BD,CA/CD,CAiDA,cAAeD,CAAAA,iBAAf","sourcesContent":["import { Button } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Spinner } from \"reactstrap\";\nimport { verifyUser } from \"../Backend/sendRequestToServer\";\n\nconst EmailVerification = () => {\n  const [success, setSuccess] = useState(true);\n  const history = useHistory();\n  const params = new URLSearchParams(window.location.search);\n  useEffect(() => {\n    const email = params.get(\"email\");\n    const token = params.get(\"token\");\n    console.log({ email, token });\n    verifyUser({ emailId: email, token: token }).then((res) => {\n      if (res.status === 200) {\n        setSuccess(true);\n      } else {\n        setSuccess(false);\n      }\n    });\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {success ? (\n        <>\n          <h3>You Are Verified! You can login now.</h3>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              history.push(\"/\");\n            }}\n          >\n            Login\n          </Button>\n        </>\n      ) : success === false ? (\n        <h3>You Are Not Verified.</h3>\n      ) : (\n        <Spinner color=\"primary\" />\n      )}\n    </div>\n  );\n};\n\nexport default EmailVerification;\n"]},"metadata":{},"sourceType":"module"}