{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parve\\\\Desktop\\\\job portal cod\\\\job-portal-react-main\\\\src\\\\components\\\\applicant\\\\ViewAppliedJob.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../../contexts/AuthContext\"; //components\n\nimport Navbar from \"./Navbar\";\nimport JobApplied from \"./JobApplied\";\nimport { viewAppliedJobFromServer, viewAppliedJobOfCandidateFromServer } from \"../../Backend/sendRequestToServer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ViewAppliedJob() {\n  _s();\n\n  //states\n  const [appliedJobList, setAppliedJobList] = useState();\n  const {\n    currentUser\n  } = useAuth();\n  useEffect(() => {\n    viewAppliedJobOfCandidateFromServer(currentUser !== null && currentUser !== void 0 ? currentUser : {}).then(appliedJobList => {\n      if (appliedJobList.status === 200) setAppliedJobList(appliedJobList.result);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-4 pb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: \"Applied Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row m-0\",\n          children: appliedJobList ? appliedJobList.map((appliedJob, index) => /*#__PURE__*/_jsxDEV(JobApplied, {\n            appliedJob: appliedJob\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 19\n          }, this)) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ViewAppliedJob, \"E5bMWz/hw9m2O/F7W+Qw66FtnSA=\", false, function () {\n  return [useAuth];\n});\n\n_c = ViewAppliedJob;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewAppliedJob\");","map":{"version":3,"sources":["C:/Users/parve/Desktop/job portal cod/job-portal-react-main/src/components/applicant/ViewAppliedJob.jsx"],"names":["React","useState","useEffect","useAuth","Navbar","JobApplied","viewAppliedJobFromServer","viewAppliedJobOfCandidateFromServer","ViewAppliedJob","appliedJobList","setAppliedJobList","currentUser","then","status","result","map","appliedJob","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,4BAAxB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SACEC,wBADF,EAEEC,mCAFF,QAGO,mCAHP;;;AAKA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,EAApD;AAEA,QAAM;AAAEU,IAAAA;AAAF,MAAkBR,OAAO,EAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,mCAAmC,CAACI,WAAD,aAACA,WAAD,cAACA,WAAD,GAAgB,EAAhB,CAAnC,CAAuDC,IAAvD,CACGH,cAAD,IAAoB;AAClB,UAAIA,cAAc,CAACI,MAAf,KAA0B,GAA9B,EACEH,iBAAiB,CAACD,cAAc,CAACK,MAAhB,CAAjB;AACH,KAJH;AAMD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,oBACgD;AAAA;AAAA;AAAA;AAAA,gBADhD,eAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,oBACGL,cAAc,GACXA,cAAc,CAACM,GAAf,CAAmB,CAACC,UAAD,EAAaC,KAAb,kBACjB,QAAC,UAAD;AAAY,YAAA,UAAU,EAAED;AAAxB,aAAyCC,KAAzC;AAAA;AAAA;AAAA;AAAA,kBADF,CADW,GAIX;AALN;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAiBD;;GAhCuBT,c;UAIEL,O;;;KAJFK,c","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\n//components\nimport Navbar from \"./Navbar\";\nimport JobApplied from \"./JobApplied\";\nimport {\n  viewAppliedJobFromServer,\n  viewAppliedJobOfCandidateFromServer,\n} from \"../../Backend/sendRequestToServer\";\n\nexport default function ViewAppliedJob() {\n  //states\n  const [appliedJobList, setAppliedJobList] = useState();\n\n  const { currentUser } = useAuth();\n\n  useEffect(() => {\n    viewAppliedJobOfCandidateFromServer(currentUser ?? {}).then(\n      (appliedJobList) => {\n        if (appliedJobList.status === 200)\n          setAppliedJobList(appliedJobList.result);\n      }\n    );\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container pt-4 pb-4\">\n        <div className=\"mt-3 mb-3\">\n          <h3 className=\"text-center\">Applied Jobs</h3> <br />\n          <div className=\"row m-0\">\n            {appliedJobList\n              ? appliedJobList.map((appliedJob, index) => (\n                  <JobApplied appliedJob={appliedJob} key={index} />\n                ))\n              : \"\"}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}