{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parve\\\\Desktop\\\\job portal cod\\\\job-portal-react-main\\\\src\\\\contexts\\\\AuthContext.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { candidateLoginWithServer, loginWithServer } from \"../Backend/sendRequestToServer\";\nimport firebase from \"firebase/app\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n\n  const [currentUser, setCurrentUser] = useState();\n  const [loading, setLoading] = useState(true);\n\n  async function initFirebase() {\n    const firebaseConfig = {\n      apiKey: \"AIzaSyDhqMOYAoxr6mDD8esUzDnqI_JNZZIgC2I\",\n      authDomain: \"job-portal-latest.firebaseapp.com\",\n      projectId: \"job-portal-latest\",\n      storageBucket: \"job-portal-latest.appspot.com\",\n      messagingSenderId: \"786750618884\",\n      appId: \"1:786750618884:web:b98c0dae338ca972a3e451\",\n      measurementId: \"G-M2K3RJ986S\"\n    }; // Initialize Firebase\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    } else {\n      firebase.app(); // if already initialized, use that one\n    }\n\n    console.log(firebase.storage().app);\n  }\n\n  async function login(email, password, candidate) {\n    let res = await loginWithServer({\n      emailId: email,\n      password: password,\n      isApplicant: candidate\n    }); // Response contains status and User Object\n\n    console.log({\n      res\n    });\n\n    if (res.status === 200) {\n      localStorage.setItem(\"user\", JSON.stringify(res));\n      setCurrentUser(res);\n      setLoading(false);\n    }\n\n    return res;\n  }\n\n  function setUserDetails(res) {\n    localStorage.setItem(\"user\", JSON.stringify(res));\n    setCurrentUser(res);\n  }\n\n  function logout() {\n    localStorage.clear();\n    setCurrentUser();\n  }\n\n  useEffect(() => {\n    const res = localStorage.getItem(\"user\");\n\n    if (res) {\n      setCurrentUser(JSON.parse(res));\n    }\n\n    initFirebase();\n    setLoading(false);\n  }, []);\n  const value = {\n    currentUser,\n    login,\n    logout,\n    setUserDetails\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(AuthProvider, \"1cdeWWSmbSz3cOWqWLAt+Ta4DMY=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/parve/Desktop/job portal cod/job-portal-react-main/src/contexts/AuthContext.jsx"],"names":["React","useContext","useState","useEffect","useHistory","candidateLoginWithServer","loginWithServer","firebase","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","initFirebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","app","console","log","storage","login","email","password","candidate","res","emailId","isApplicant","status","localStorage","setItem","JSON","stringify","setUserDetails","logout","clear","getItem","parse","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SACEC,wBADF,EAEEC,eAFF,QAGO,gCAHP;AAIA,OAAOC,QAAP,MAAqB,cAArB;;AAEA,MAAMC,WAAW,gBAAGR,KAAK,CAACS,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,SAAOT,UAAU,CAACO,WAAD,CAAjB;AACD;;GAFeE,O;;AAIhB,OAAO,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACzC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,EAA9C;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,IAAD,CAAtC;;AAEA,iBAAee,YAAf,GAA8B;AAC5B,UAAMC,cAAc,GAAG;AACrBC,MAAAA,MAAM,EAAE,yCADa;AAErBC,MAAAA,UAAU,EAAE,mCAFS;AAGrBC,MAAAA,SAAS,EAAE,mBAHU;AAIrBC,MAAAA,aAAa,EAAE,+BAJM;AAKrBC,MAAAA,iBAAiB,EAAE,cALE;AAMrBC,MAAAA,KAAK,EAAE,2CANc;AAOrBC,MAAAA,aAAa,EAAE;AAPM,KAAvB,CAD4B,CAU5B;;AACA,QAAI,CAAClB,QAAQ,CAACmB,IAAT,CAAcC,MAAnB,EAA2B;AACzBpB,MAAAA,QAAQ,CAACqB,aAAT,CAAuBV,cAAvB;AACD,KAFD,MAEO;AACLX,MAAAA,QAAQ,CAACsB,GAAT,GADK,CACW;AACjB;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYxB,QAAQ,CAACyB,OAAT,GAAmBH,GAA/B;AACD;;AAED,iBAAeI,KAAf,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiD;AAC/C,QAAIC,GAAG,GAAG,MAAM/B,eAAe,CAAC;AAC9BgC,MAAAA,OAAO,EAAEJ,KADqB;AAE9BC,MAAAA,QAAQ,EAAEA,QAFoB;AAG9BI,MAAAA,WAAW,EAAEH;AAHiB,KAAD,CAA/B,CAD+C,CAK3C;;AAEJN,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEM,MAAAA;AAAF,KAAZ;;AACA,QAAIA,GAAG,CAACG,MAAJ,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeP,GAAf,CAA7B;AACAvB,MAAAA,cAAc,CAACuB,GAAD,CAAd;AACArB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACD,WAAOqB,GAAP;AACD;;AAED,WAASQ,cAAT,CAAwBR,GAAxB,EAA6B;AAC3BI,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeP,GAAf,CAA7B;AACAvB,IAAAA,cAAc,CAACuB,GAAD,CAAd;AACD;;AAED,WAASS,MAAT,GAAkB;AAChBL,IAAAA,YAAY,CAACM,KAAb;AACAjC,IAAAA,cAAc;AACf;;AAEDX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkC,GAAG,GAAGI,YAAY,CAACO,OAAb,CAAqB,MAArB,CAAZ;;AACA,QAAIX,GAAJ,EAAS;AACPvB,MAAAA,cAAc,CAAC6B,IAAI,CAACM,KAAL,CAAWZ,GAAX,CAAD,CAAd;AACD;;AACDpB,IAAAA,YAAY;AACZD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAPQ,EAON,EAPM,CAAT;AASA,QAAMkC,KAAK,GAAG;AACZrC,IAAAA,WADY;AAEZoB,IAAAA,KAFY;AAGZa,IAAAA,MAHY;AAIZD,IAAAA;AAJY,GAAd;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,KAA7B;AAAA,cACG,CAACnC,OAAD,IAAYH;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAvEeD,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  candidateLoginWithServer,\r\n  loginWithServer,\r\n} from \"../Backend/sendRequestToServer\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function initFirebase() {\r\n    const firebaseConfig = {\r\n      apiKey: \"AIzaSyDhqMOYAoxr6mDD8esUzDnqI_JNZZIgC2I\",\r\n      authDomain: \"job-portal-latest.firebaseapp.com\",\r\n      projectId: \"job-portal-latest\",\r\n      storageBucket: \"job-portal-latest.appspot.com\",\r\n      messagingSenderId: \"786750618884\",\r\n      appId: \"1:786750618884:web:b98c0dae338ca972a3e451\",\r\n      measurementId: \"G-M2K3RJ986S\",\r\n    };\r\n    // Initialize Firebase\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(firebaseConfig);\r\n    } else {\r\n      firebase.app(); // if already initialized, use that one\r\n    }\r\n\r\n    console.log(firebase.storage().app);\r\n  }\r\n\r\n  async function login(email, password, candidate) {\r\n    let res = await loginWithServer({\r\n      emailId: email,\r\n      password: password,\r\n      isApplicant: candidate,\r\n    }); // Response contains status and User Object\r\n\r\n    console.log({ res });\r\n    if (res.status === 200) {\r\n      localStorage.setItem(\"user\", JSON.stringify(res));\r\n      setCurrentUser(res);\r\n      setLoading(false);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  function setUserDetails(res) {\r\n    localStorage.setItem(\"user\", JSON.stringify(res));\r\n    setCurrentUser(res);\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.clear();\r\n    setCurrentUser();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const res = localStorage.getItem(\"user\");\r\n    if (res) {\r\n      setCurrentUser(JSON.parse(res));\r\n    }\r\n    initFirebase();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    logout,\r\n    setUserDetails,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}