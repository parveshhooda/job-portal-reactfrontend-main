{"ast":null,"code":"import { useAuth } from \"../contexts/AuthContext\"; //const SERVER = \"https://job-portal-latest.herokuapp.com\";\n// const SERVER = \"http://localhost:8082\";\n\nconst SERVER = \"https://jobportalproject2021.herokuapp.com\";\nexport async function loginWithServer(data) {\n  try {\n    const res = await fetch(SERVER + \"/login\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function addUser(data) {\n  try {\n    const id = Math.floor(Math.random() * 100);\n    const res = await fetch(SERVER + \"/addUser\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function changePassword(data) {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/resetPassword\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      },\n      body: JSON.stringify(data)\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function verifyUser(data) {\n  try {\n    const res = await fetch(SERVER + \"/verifyUser\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function sendOtpVerification(data) {\n  try {\n    const res = await fetch(SERVER + \"/forgotPassword\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function verifyOtp(data) {\n  try {\n    const res = await fetch(SERVER + \"/verifyOtp\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function changeToNewPassword(data) {\n  try {\n    const res = await fetch(SERVER + \"/changePassword\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function viewUserFromServer() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/viewUser\", {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      }\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function addRole(data) {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const id = Math.floor(Math.random() * 100);\n    const res = await fetch(SERVER + \"/addRole\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function viewRoleFromServer() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/viewRole\", {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      }\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function editRoleFromServer(data) {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/editRole\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function editUserFromServer(data) {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/editUser\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function deleteRoleFromServer(data) {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/deleteRole\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.text();\n    return {\n      status: res.status,\n      result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function deleteUserFromServer(data) {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/deleteUser\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.text();\n    return {\n      status: res.status,\n      result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function getPrevilegesFromServer(role) {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    let previleges = [];\n    const roles = await viewRoleFromServer();\n\n    if (roles.status == 200 && roles.result) {\n      for (let rol of roles.result) {\n        if (rol.role === role) {\n          previleges = JSON.parse(rol.permission_Arr)[\"privileges\"];\n          break;\n        }\n      }\n    }\n\n    console.log(previleges);\n    return {\n      status: 200,\n      previleges\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function addJob(obj) {\n  /*  Job Model : \r\n      title\r\n      city\r\n      openings\r\n      description\r\n      skills\r\n      ctc\r\n      uid\r\n      employerEmail */\n  const data = {\n    title: obj.jobTitle,\n    type: obj.jobType,\n    city: obj.city,\n    openings: obj.openings,\n    description: obj.description,\n    skills: obj.skills,\n    ctc: obj.ctc,\n    uid: obj.uid,\n    employerEmail: obj.employerEmail\n  };\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/addJob\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    console.log(result);\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function viewJobFromServer() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/viewJob\", {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      }\n    });\n    const result = await res.json();\n    console.log(result);\n    return {\n      status: res.status,\n      result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function addAppliedJob(data) {\n  /*  Job Model : \r\n      name\r\n      phone\r\n      email\r\n      uid\r\n      employeeEmail\r\n      jobName\r\n      appliedJobId\r\n      */\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/addAppliedJob\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    console.log(result);\n    return {\n      resStatus: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      resStatus: 400,\n      error: e.message\n    };\n  }\n}\nexport async function viewAppliedJobFromServer() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/viewAppliedJob\", {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      }\n    });\n    const result = await res.json();\n    console.log(result);\n    return {\n      status: res.status,\n      result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function viewAppliedJobOfCandidateFromServer(data) {\n  console.log(\"Applied job Candidate : \", {\n    data\n  });\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/viewAppliedJobOfCandidate\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    console.log(result);\n    return {\n      status: res.status,\n      result\n    };\n  } catch (e) {\n    console.log(e);\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}\nexport async function editResumeOfUser(data) {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  let jwt;\n\n  if (user && user.jwt) {\n    jwt = user.jwt;\n  } else {\n    return {\n      status: 400,\n      error: \"Access Token is not Assigned\"\n    };\n  }\n\n  try {\n    const res = await fetch(SERVER + \"/editResumeOfUser\", {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      },\n      body: JSON.stringify({ ...data\n      })\n    });\n    const result = await res.json();\n    return {\n      status: res.status,\n      ...result\n    };\n  } catch (e) {\n    return {\n      status: 400,\n      error: e.message\n    };\n  }\n}","map":{"version":3,"sources":["C:/Users/parve/Desktop/job portal cod/job-portal-react-main/src/Backend/sendRequestToServer.js"],"names":["useAuth","SERVER","loginWithServer","data","res","fetch","method","headers","body","JSON","stringify","result","json","status","e","error","message","addUser","id","Math","floor","random","changePassword","user","parse","localStorage","getItem","jwt","Authorization","verifyUser","sendOtpVerification","verifyOtp","changeToNewPassword","viewUserFromServer","addRole","viewRoleFromServer","editRoleFromServer","editUserFromServer","deleteRoleFromServer","text","deleteUserFromServer","getPrevilegesFromServer","role","previleges","roles","rol","permission_Arr","console","log","addJob","obj","title","jobTitle","type","jobType","city","openings","description","skills","ctc","uid","employerEmail","viewJobFromServer","addAppliedJob","resStatus","viewAppliedJobFromServer","viewAppliedJobOfCandidateFromServer","editResumeOfUser"],"mappings":"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","sourcesContent":["import { useAuth } from \"../contexts/AuthContext\";\r\n\r\n//const SERVER = \"https://job-portal-latest.herokuapp.com\";\r\n// const SERVER = \"http://localhost:8082\";\r\nconst SERVER = \"https://jobportalproject2021.herokuapp.com\";\r\nexport async function loginWithServer(data) {\r\n  try {\r\n    const res = await fetch(SERVER + \"/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function addUser(data) {\r\n  try {\r\n    const id = Math.floor(Math.random() * 100);\r\n    const res = await fetch(SERVER + \"/addUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function changePassword(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/resetPassword\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function verifyUser(data) {\r\n  try {\r\n    const res = await fetch(SERVER + \"/verifyUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function sendOtpVerification(data) {\r\n  try {\r\n    const res = await fetch(SERVER + \"/forgotPassword\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function verifyOtp(data) {\r\n  try {\r\n    const res = await fetch(SERVER + \"/verifyOtp\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function changeToNewPassword(data) {\r\n  try {\r\n    const res = await fetch(SERVER + \"/changePassword\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function viewUserFromServer() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/viewUser\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function addRole(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const id = Math.floor(Math.random() * 100);\r\n    const res = await fetch(SERVER + \"/addRole\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function viewRoleFromServer() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/viewRole\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function editRoleFromServer(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/editRole\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function editUserFromServer(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/editUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function deleteRoleFromServer(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/deleteRole\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.text();\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function deleteUserFromServer(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/deleteUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.text();\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function getPrevilegesFromServer(role) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    let previleges = [];\r\n    const roles = await viewRoleFromServer();\r\n\r\n    if (roles.status == 200 && roles.result) {\r\n      for (let rol of roles.result) {\r\n        if (rol.role === role) {\r\n          previleges = JSON.parse(rol.permission_Arr)[\"privileges\"];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(previleges);\r\n\r\n    return { status: 200, previleges };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function addJob(obj) {\r\n  /*  Job Model : \r\n      title\r\n      city\r\n      openings\r\n      description\r\n      skills\r\n      ctc\r\n      uid\r\n      employerEmail */\r\n  const data = {\r\n    title: obj.jobTitle,\r\n    type: obj.jobType,\r\n    city: obj.city,\r\n    openings: obj.openings,\r\n    description: obj.description,\r\n    skills: obj.skills,\r\n    ctc: obj.ctc,\r\n    uid: obj.uid,\r\n    employerEmail: obj.employerEmail,\r\n  };\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/addJob\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    console.log(result);\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function viewJobFromServer() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/viewJob\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n    });\r\n    const result = await res.json();\r\n    console.log(result);\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function addAppliedJob(data) {\r\n  /*  Job Model : \r\n      name\r\n      phone\r\n      email\r\n      uid\r\n      employeeEmail\r\n      jobName\r\n      appliedJobId\r\n      */\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/addAppliedJob\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    console.log(result);\r\n    return { resStatus: res.status, ...result };\r\n  } catch (e) {\r\n    return { resStatus: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function viewAppliedJobFromServer() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/viewAppliedJob\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n    });\r\n    const result = await res.json();\r\n    console.log(result);\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function viewAppliedJobOfCandidateFromServer(data) {\r\n  console.log(\"Applied job Candidate : \", { data });\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/viewAppliedJobOfCandidate\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    console.log(result);\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    console.log(e);\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function editResumeOfUser(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/editResumeOfUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}