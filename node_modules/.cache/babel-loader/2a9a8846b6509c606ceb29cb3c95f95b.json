{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\parve\\\\Desktop\\\\job portal cod\\\\job-portal-react-main\\\\src\\\\components\\\\applicant\\\\Job.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\"; //material UI\n\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport { Divider } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\"; //components\n\nimport swal from \"sweetalert\";\nimport { addAppliedJob } from \"../../Backend/sendRequestToServer\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Job({\n  job\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const {\n    currentUser\n  } = useAuth();\n\n  const handleApplySubmit = async (jobName, appliedJobId) => {\n    var _job$employerEmail;\n\n    // setError(\"\");\n    setLoading(true);\n    const values = {\n      name: currentUser.userName,\n      phone: currentUser.number,\n      email: currentUser.emailId,\n      uid: currentUser ? currentUser.id : \"\",\n      jobName: jobName ? jobName : \"\",\n      appliedJobId: appliedJobId !== null && appliedJobId !== void 0 ? appliedJobId : \"\",\n      employerEmail: (_job$employerEmail = job.employerEmail) !== null && _job$employerEmail !== void 0 ? _job$employerEmail : \"\"\n    };\n    const res = await addAppliedJob(values);\n\n    if (res.resStatus === 200) {\n      setLoading(false);\n      swal(\"Success!\", \"Applied Job Added\", \"success\").then(value => {\n        history.push(\"/view-applied-jobs\");\n      });\n    } else {\n      console.log(res);\n      setLoading(false);\n      swal(\"Failed!\", \"Failed to Add Job. Try Again!!!\", \"error\");\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border shadow-sm rounded-lg p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mb-2\",\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row m-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-3 badge badge-primary\",\n              children: job.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 text-right small\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                color: \"primary\",\n                onClick: () => handleApplySubmit(job.title, job.id),\n                size: \"small\",\n                children: \"Apply Job\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row m-0 mb-3 small\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 p-0\",\n            children: [/*#__PURE__*/_jsxDEV(LocationOnIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), \" \", job.city]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 p-0\",\n            children: [/*#__PURE__*/_jsxDEV(PersonIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), \" Openings: \", job.openings]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4 p-0\",\n            children: [/*#__PURE__*/_jsxDEV(AttachMoneyIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), \" CTC: \\u20B9\", job.ctc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-2 small\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-weight-bold\",\n            children: \"Skills\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), job.skills]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"small mb-3\",\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"small mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-weight-bold\",\n            children: \"Contact:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), \" \", job.employerEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Job, \"vLOnrPhiJhLEIUbkcKk3nLPF8C0=\", false, function () {\n  return [useHistory, useAuth];\n});\n\n_c = Job;\n\nvar _c;\n\n$RefreshReg$(_c, \"Job\");","map":{"version":3,"sources":["C:/Users/parve/Desktop/job portal cod/job-portal-react-main/src/components/applicant/Job.jsx"],"names":["React","useState","Link","useHistory","LocationOnIcon","PersonIcon","AttachMoneyIcon","Divider","Button","Dialog","DialogActions","DialogContent","DialogTitle","swal","addAppliedJob","useAuth","Job","job","open","setOpen","loading","setLoading","history","currentUser","handleApplySubmit","jobName","appliedJobId","values","name","userName","phone","number","email","emailId","uid","id","employerEmail","res","resStatus","then","value","push","console","log","handleClose","title","type","city","openings","ctc","skills","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\n//material UI\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport { Divider } from \"@material-ui/core\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n//components\nimport swal from \"sweetalert\";\nimport { addAppliedJob } from \"../../Backend/sendRequestToServer\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nexport default function Job({ job }) {\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const { currentUser } = useAuth();\n\n  const handleApplySubmit = async (jobName, appliedJobId) => {\n    // setError(\"\");\n    setLoading(true);\n    const values = {\n      name: currentUser.userName,\n      phone: currentUser.number,\n      email: currentUser.emailId,\n      uid: currentUser ? currentUser.id : \"\",\n      jobName: jobName ? jobName : \"\",\n      appliedJobId: appliedJobId ?? \"\",\n      employerEmail: job.employerEmail ?? \"\",\n    };\n\n    const res = await addAppliedJob(values);\n\n    if (res.resStatus === 200) {\n      setLoading(false);\n      swal(\"Success!\", \"Applied Job Added\", \"success\").then((value) => {\n        history.push(\"/view-applied-jobs\");\n      });\n    } else {\n      console.log(res);\n      setLoading(false);\n      swal(\"Failed!\", \"Failed to Add Job. Try Again!!!\", \"error\");\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"col-12\">\n      <div className=\"m-1\">\n        <div className=\"border shadow-sm rounded-lg p-3\">\n          <h4 className=\"mb-2\">{job.title}</h4>\n          <div className=\"row m-0\">\n            <div className=\"col-6\">\n              <div className=\"mb-3 badge badge-primary\">{job.type}</div>\n            </div>\n            <div className=\"col-6 text-right small\">\n              <div>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => handleApplySubmit(job.title, job.id)}\n                  size=\"small\"\n                >\n                  Apply Job\n                </Button>\n              </div>\n            </div>\n          </div>\n          <div className=\"row m-0 mb-3 small\">\n            <div className=\"col-4 p-0\">\n              <LocationOnIcon fontSize=\"small\" /> {job.city}\n            </div>\n            <div className=\"col-4 p-0\">\n              <PersonIcon fontSize=\"small\" /> Openings: {job.openings}\n            </div>\n\n            <div className=\"col-4 p-0\">\n              <AttachMoneyIcon fontSize=\"small\" /> CTC: ₹{job.ctc}\n            </div>\n          </div>\n          <div className=\"mb-2 small\">\n            <span className=\"font-weight-bold\">Skills</span>\n            <br />\n            {job.skills}\n          </div>\n          <div className=\"small mb-3\">{job.description}</div>\n          <Divider />\n          <div className=\"small mt-2\">\n            <span className=\"font-weight-bold\">Contact:</span>{\" \"}\n            {job.employerEmail}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}