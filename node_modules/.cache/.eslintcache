[{"C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\index.js":"1","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\App.jsx":"2","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\contexts\\AuthContext.jsx":"3","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\Routes\\Routes.jsx":"4","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\Backend\\sendRequestToServer.js":"5","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\Common\\EmailVerification.jsx":"6","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\Common\\ForgotPassword.jsx":"7","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\EmployerLogin.jsx":"8","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\ViewRole.jsx":"9","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\AddRole.jsx":"10","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\ViewPostedJob.jsx":"11","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\PostJob.jsx":"12","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\GetStarted.jsx":"13","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\ViewCandidates.jsx":"14","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\AddUser.jsx":"15","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\ViewUsers.jsx":"16","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\ResetPassword.jsx":"17","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\ApplicantSignup.jsx":"18","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\ApplicantLogin.jsx":"19","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\AvailableJobs.jsx":"20","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\ViewAppliedJob.jsx":"21","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\UploadResume.jsx":"22","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\Common\\Constants.js":"23","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\Navbar.jsx":"24","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\Job.jsx":"25","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\Navbar.jsx":"26","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\JobApplied.jsx":"27","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\Job.jsx":"28","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\Candidates.jsx":"29"},{"size":211,"mtime":1629809815000,"results":"30","hashOfConfig":"31"},{"size":291,"mtime":1629809815000,"results":"32","hashOfConfig":"31"},{"size":2575,"mtime":1629918600025,"results":"33","hashOfConfig":"31"},{"size":3089,"mtime":1629809815000,"results":"34","hashOfConfig":"31"},{"size":13374,"mtime":1629900865688,"results":"35","hashOfConfig":"31"},{"size":1416,"mtime":1629809815000,"results":"36","hashOfConfig":"31"},{"size":11096,"mtime":1629809815000,"results":"37","hashOfConfig":"31"},{"size":3709,"mtime":1629809815000,"results":"38","hashOfConfig":"31"},{"size":7779,"mtime":1629809815000,"results":"39","hashOfConfig":"31"},{"size":15246,"mtime":1629809815000,"results":"40","hashOfConfig":"31"},{"size":1161,"mtime":1629809815000,"results":"41","hashOfConfig":"31"},{"size":9138,"mtime":1629809815000,"results":"42","hashOfConfig":"31"},{"size":782,"mtime":1629809815000,"results":"43","hashOfConfig":"31"},{"size":1666,"mtime":1629809815000,"results":"44","hashOfConfig":"31"},{"size":13036,"mtime":1629809815000,"results":"45","hashOfConfig":"31"},{"size":5430,"mtime":1629809815000,"results":"46","hashOfConfig":"31"},{"size":8455,"mtime":1629809815000,"results":"47","hashOfConfig":"31"},{"size":6940,"mtime":1629809815000,"results":"48","hashOfConfig":"31"},{"size":3792,"mtime":1629809815000,"results":"49","hashOfConfig":"31"},{"size":807,"mtime":1629809815000,"results":"50","hashOfConfig":"31"},{"size":1166,"mtime":1629809815000,"results":"51","hashOfConfig":"31"},{"size":7604,"mtime":1629809815000,"results":"52","hashOfConfig":"31"},{"size":650,"mtime":1629809815000,"results":"53","hashOfConfig":"31"},{"size":8817,"mtime":1629809815000,"results":"54","hashOfConfig":"31"},{"size":3439,"mtime":1629809815000,"results":"55","hashOfConfig":"31"},{"size":3454,"mtime":1629809815000,"results":"56","hashOfConfig":"31"},{"size":2160,"mtime":1629809815000,"results":"57","hashOfConfig":"31"},{"size":1649,"mtime":1629809815000,"results":"58","hashOfConfig":"31"},{"size":2846,"mtime":1629809815000,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sk94w0",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":49,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},"C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\index.js",[],"C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\App.jsx",[],"C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\contexts\\AuthContext.jsx",["141","142"],"C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\Routes\\Routes.jsx",["143"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\n//components\r\n//employer\r\nimport EmployerLogin from \"../components/employer/EmployerLogin\";\r\n\r\nimport AddRole from \"../components/employer/AddRole\";\r\nimport ViewRole from \"../components/employer/ViewRole\";\r\nimport PostJob from \"../components/employer/PostJob\";\r\nimport ViewPostedJob from \"../components/employer/ViewPostedJob\";\r\nimport GetStarted from \"../components/employer/GetStarted\";\r\n\r\nimport ApplicantSignup from \"../components/applicant/ApplicantSignup\";\r\nimport ApplicantLogin from \"../components/applicant/ApplicantLogin\";\r\nimport AvailableJobs from \"../components/applicant/AvailableJobs\";\r\nimport ViewAppliedJob from \"../components/applicant/ViewAppliedJob\";\r\nimport ViewCandidates from \"../components/employer/ViewCandidates\";\r\nimport AddUser from \"../components/employer/AddUser\";\r\nimport ViewUsers from \"../components/employer/ViewUsers\";\r\nimport ResetPassword from \"../components/employer/ResetPassword\";\r\nimport EmailVerification from \"../Common/EmailVerification\";\r\nimport ForgotPassword from \"../Common/ForgotPassword\";\r\nimport UploadResume from \"../components/applicant/UploadResume\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/getstarted\">\r\n            <GetStarted />\r\n          </Route>\r\n\r\n          <Route exact path={[\"/employer-login\", \"/\"]}>\r\n            <EmployerLogin />\r\n          </Route>\r\n          <Route exact path=\"/reset-password\">\r\n            <ResetPassword />\r\n          </Route>\r\n\r\n          <Route exact path=\"/emailVerification\">\r\n            <EmailVerification />\r\n          </Route>\r\n\r\n          <Route exact path=\"/forgot-password\">\r\n            <ForgotPassword />\r\n          </Route>\r\n\r\n          <Route exact path=\"/add-user\">\r\n            <AddUser />\r\n          </Route>\r\n          <Route exact path=\"/view-user\">\r\n            <ViewUsers />\r\n          </Route>\r\n\r\n          <Route exact path=\"/add-role\">\r\n            <AddRole />\r\n          </Route>\r\n          <Route exact path=\"/view-role\">\r\n            <ViewRole />\r\n          </Route>\r\n\r\n          <Route exact path=\"/post-job\">\r\n            <PostJob />\r\n          </Route>\r\n\r\n          <Route exact path=\"/view-posted-jobs\">\r\n            <ViewPostedJob />\r\n          </Route>\r\n\r\n          <Route exact path=\"/applicant-login\">\r\n            <ApplicantLogin />\r\n          </Route>\r\n          <Route exact path=\"/applicant-signup\">\r\n            <ApplicantSignup />\r\n          </Route>\r\n\r\n          <Route exact path=\"/available-jobs\">\r\n            <AvailableJobs />\r\n          </Route>\r\n\r\n          <Route exact path=\"/view-applied-jobs\">\r\n            <ViewAppliedJob />\r\n          </Route>\r\n          <Route exact path=\"/view-applied-candidates\">\r\n            <ViewCandidates />\r\n          </Route>\r\n          <Route exact path=\"/upload-resume\">\r\n            <UploadResume />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\Backend\\sendRequestToServer.js",["144","145","146","147","148"],"import { useAuth } from \"../contexts/AuthContext\";\r\n\r\n//const SERVER = \"https://job-portal-latest.herokuapp.com\";\r\n// const SERVER = \"http://localhost:8082\";\r\nconst SERVER = \"https://jobportalproject2021-server.herokuapp.com\";\r\nexport async function loginWithServer(data) {\r\n  try {\r\n    const res = await fetch(SERVER + \"/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function addUser(data) {\r\n  try {\r\n    const id = Math.floor(Math.random() * 100);\r\n    const res = await fetch(SERVER + \"/addUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function changePassword(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/resetPassword\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function verifyUser(data) {\r\n  try {\r\n    const res = await fetch(SERVER + \"/verifyUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function sendOtpVerification(data) {\r\n  try {\r\n    const res = await fetch(SERVER + \"/forgotPassword\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function verifyOtp(data) {\r\n  try {\r\n    const res = await fetch(SERVER + \"/verifyOtp\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function changeToNewPassword(data) {\r\n  try {\r\n    const res = await fetch(SERVER + \"/changePassword\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function viewUserFromServer() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/viewUser\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function addRole(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const id = Math.floor(Math.random() * 100);\r\n    const res = await fetch(SERVER + \"/addRole\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function viewRoleFromServer() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/viewRole\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function editRoleFromServer(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/editRole\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function editUserFromServer(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/editUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function deleteRoleFromServer(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/deleteRole\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.text();\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function deleteUserFromServer(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/deleteUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.text();\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function getPrevilegesFromServer(role) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    let previleges = [];\r\n    const roles = await viewRoleFromServer();\r\n\r\n    if (roles.status == 200 && roles.result) {\r\n      for (let rol of roles.result) {\r\n        if (rol.role === role) {\r\n          previleges = JSON.parse(rol.permission_Arr)[\"privileges\"];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(previleges);\r\n\r\n    return { status: 200, previleges };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function addJob(obj) {\r\n  /*  Job Model : \r\n      title\r\n      city\r\n      openings\r\n      description\r\n      skills\r\n      ctc\r\n      uid\r\n      employerEmail */\r\n  const data = {\r\n    title: obj.jobTitle,\r\n    type: obj.jobType,\r\n    city: obj.city,\r\n    openings: obj.openings,\r\n    description: obj.description,\r\n    skills: obj.skills,\r\n    ctc: obj.ctc,\r\n    uid: obj.uid,\r\n    employerEmail: obj.employerEmail,\r\n  };\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/addJob\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    console.log(result);\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function viewJobFromServer() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/viewJob\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n    });\r\n    const result = await res.json();\r\n    console.log(result);\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function addAppliedJob(data) {\r\n  /*  Job Model : \r\n      name\r\n      phone\r\n      email\r\n      uid\r\n      employeeEmail\r\n      jobName\r\n      appliedJobId\r\n      */\r\n\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/addAppliedJob\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    console.log(result);\r\n    return { resStatus: res.status, ...result };\r\n  } catch (e) {\r\n    return { resStatus: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function viewAppliedJobFromServer() {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/viewAppliedJob\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n    });\r\n    const result = await res.json();\r\n    console.log(result);\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function viewAppliedJobOfCandidateFromServer(data) {\r\n  console.log(\"Applied job Candidate : \", { data });\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/viewAppliedJobOfCandidate\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    console.log(result);\r\n    return { status: res.status, result };\r\n  } catch (e) {\r\n    console.log(e);\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n\r\nexport async function editResumeOfUser(data) {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  let jwt;\r\n  if (user && user.jwt) {\r\n    jwt = user.jwt;\r\n  } else {\r\n    return { status: 400, error: \"Access Token is not Assigned\" };\r\n  }\r\n  try {\r\n    const res = await fetch(SERVER + \"/editResumeOfUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n      body: JSON.stringify({ ...data }),\r\n    });\r\n    const result = await res.json();\r\n    return { status: res.status, ...result };\r\n  } catch (e) {\r\n    return { status: 400, error: e.message };\r\n  }\r\n}\r\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\Common\\EmailVerification.jsx",["149","150"],"import { Button } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Spinner } from \"reactstrap\";\nimport { verifyUser } from \"../Backend/sendRequestToServer\";\n\nconst EmailVerification = () => {\n  const [success, setSuccess] = useState(true);\n  const history = useHistory();\n  const params = new URLSearchParams(window.location.search);\n  useEffect(() => {\n    const email = params.get(\"email\");\n    const token = params.get(\"token\");\n    console.log({ email, token });\n    verifyUser({ emailId: email, token: token }).then((res) => {\n      if (res.status === 200) {\n        setSuccess(true);\n      } else {\n        setSuccess(false);\n      }\n    });\n  }, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {success ? (\n        <>\n          <h3>You Are Verified! You can login now.</h3>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              history.push(\"/\");\n            }}\n          >\n            Login\n          </Button>\n        </>\n      ) : success === false ? (\n        <h3>You Are Not Verified.</h3>\n      ) : (\n        <Spinner color=\"primary\" />\n      )}\n    </div>\n  );\n};\n\nexport default EmailVerification;\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\Common\\ForgotPassword.jsx",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport clsx from \"clsx\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { green } from \"@material-ui/core/colors\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { useHistory } from \"react-router\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { drawerCollapseable } from \"./Constants\";\nimport Navbar from \"../components/employer/Navbar\";\nimport {\n  addUser,\n  changePassword,\n  changeToNewPassword,\n  sendOtpVerification,\n  verifyOtp,\n  viewRoleFromServer,\n} from \"../Backend/sendRequestToServer\";\nimport swal from \"sweetalert\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // minWidth: 275,\n    // margin: \"15px 15px 15px 15px\",\n    borderRadius: \"10px\",\n    padding: \"12px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    boxShadow: \"0 5px 10px rgba(0,0,0,0.19), 0 3px 3px rgba(0,0,0,0.21)\",\n  },\n  form: {\n    margin: \"15px 15px 15px 15px\",\n    borderRadius: \"10px\",\n    padding: \"12px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  pos: {\n    marginTop: 20,\n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  label: {\n    color: \"#000\",\n  },\n\n  textField: {\n    \"& .MuiInputBase-input\": {\n      color: \"#000\",\n    },\n  },\n\n  errMsg: {\n    color: \"red\",\n    fontWeight: \"bold\",\n    fontSize: \"small\",\n    marginBottom: \"10px\",\n    textAlign: \"left\",\n  },\n}));\n\nconst ResetPassword = (props) => {\n  let history = useHistory();\n  const [showSpinner, setShowSpinner] = React.useState(false);\n  const handleReset = () => {\n    history.push(\"/\");\n  };\n  const { currentUser } = useAuth();\n\n  const classes = useStyles();\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n        backgroundColor: \"#fff\",\n        color: \"#000\",\n      },\n    },\n  };\n\n  const [email, setEmail] = useState(\"\");\n\n  const [otpSent, setOtpSent] = useState(false);\n\n  const [otp, setOtp] = useState(\"\");\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const [user, setUser] = useState(null);\n\n  const otpButton = async (e) => {\n    e.preventDefault();\n\n    if (!email) {\n      return;\n    }\n\n    const res = await sendOtpVerification({\n      emailId: email,\n    });\n\n    if (res.status === 200) {\n      swal(\"Success!\", \"Email Sent\", \"success\").then((value) =>\n        setOtpSent(true)\n      );\n    } else {\n      console.log(res);\n      swal(\"Failed!\", \"Failed to send Email. Try Again!!!\", \"error\");\n    }\n  };\n\n  const verifyOtpButton = async (e) => {\n    e.preventDefault();\n    if (!otp) {\n      return;\n    }\n    setShowSpinner(true);\n    const res = await verifyOtp({\n      emailId: email,\n      otp: otp,\n    });\n\n    if (res.status === 200) {\n      setShowSpinner(false);\n      swal(\"Success!\", \"Otp Verified\", \"success\").then((value) =>\n        setShowPassword(true)\n      );\n      delete res.status;\n      setUser(res);\n    } else {\n      setShowSpinner(false);\n      console.log(res);\n      swal(\"Failed!\", \"Failed to verify otp. Try Again!!!\", \"error\");\n    }\n  };\n\n  const setNewPassword = async (e) => {\n    e.preventDefault();\n    if (!newPass || !confirmPass || newPass !== confirmPass) {\n      return;\n    }\n    setShowSpinner(true);\n    const res = await changeToNewPassword({ ...user, ...password });\n\n    if (res.status === 200) {\n      setShowSpinner(false);\n      swal(\"Success!\", \"Password Changed\", \"success\").then((value) =>\n        handleReset()\n      );\n    } else {\n      setShowSpinner(false);\n      console.log(res);\n      swal(\"Failed!\", \"Failed to change Password. Try Again!!!\", \"error\");\n    }\n  };\n\n  // email validation\n  const validateEmail = (email) => {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n  // phone validation\n  const validatePhone = (mob) => {\n    const re = /^[0-9]{10}$/;\n    return re.test(mob);\n  };\n\n  // custom button\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n      backgroundColor: \"#FCBF00\",\n      \"&:hover\": {\n        backgroundColor: \"#FCBF00\",\n      },\n    },\n  }))(Button);\n\n  // const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  const [password, setPassword] = useState({\n    newPass: \"\",\n    confirmPass: \"\",\n  });\n\n  const { newPass, confirmPass } = password;\n\n  const onChange = (e) => {\n    setPassword({ ...password, [e.target.name]: e.target.value });\n  };\n  return (\n    <>\n      <div className=\"container mt-5 pt-5\">\n        <div className=\"row align-items-center justify-content-center\">\n          <div className=\"col-12 col-md-6\">\n            <Card className={classes.root} variant=\"outlined\">\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  Forgot Password\n                </Typography>\n                <form className={classes.form} noValidate autoComplete=\"off\">\n                  <TextField\n                    disabled={otpSent}\n                    id=\"outlined-basic\"\n                    label=\"Email*\"\n                    name=\"email\"\n                    variant=\"outlined\"\n                    type=\"email\"\n                    onChange={(e) => setEmail(e.target.value)}\n                    style={{ marginBottom: \"10px\" }}\n                  />\n\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                      console.log(\"Reset function\");\n                      otpButton(e);\n                    }}\n                  >\n                    Send OTP\n                  </Button>\n                  <br />\n                  {otpSent && (\n                    <div>\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"OTP*\"\n                        name=\"otp\"\n                        type=\"password\"\n                        variant=\"outlined\"\n                        onChange={(e) => setOtp(e.target.value)}\n                        style={{ marginBottom: \"10px\" }}\n                      />\n                      <br />\n                      <ColorButton\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={(e) => {\n                          console.log(\"verify function\");\n                          verifyOtpButton(e);\n                        }}\n                      >\n                        Verify Otp\n                      </ColorButton>\n                    </div>\n                  )}\n                  <br />\n                  {showPassword && (\n                    <div>\n                      <TextField\n                        id=\"outlined-basic\"\n                        label=\"New Password*\"\n                        name=\"newPass\"\n                        type=\"password\"\n                        variant=\"outlined\"\n                        onChange={onChange}\n                        style={{ marginBottom: \"10px\" }}\n                      />\n                      <TextField\n                        label=\"Password*\"\n                        label=\"Confirm Password*\"\n                        name=\"confirmPass\"\n                        type=\"password\"\n                        variant=\"outlined\"\n                        onChange={onChange}\n                        style={{ marginBottom: \"10px\" }}\n                      />\n                      <ColorButton\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={(e) => {\n                          console.log(\"new password function\");\n                          setNewPassword(e);\n                        }}\n                      >\n                        Submit\n                      </ColorButton>\n                    </div>\n                  )}\n                </form>\n              </CardContent>\n              <div>\n                {showSpinner ? (\n                  <div>\n                    <span style={{ marginLeft: \"10px\", color: \"#ff0000\" }}>\n                      <h5>Please DO NOT REFRESH the page...</h5>\n                    </span>\n                    <CircularProgress\n                      style={{\n                        color: \"#18D26E\",\n                      }}\n                    />\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n              <CardActions\n                style={{ justifyContent: \"center\", fontWeight: \"bold\" }}\n              ></CardActions>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ResetPassword;\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\EmployerLogin.jsx",["198"],"import React, { useState, useRef } from \"react\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n//material UI\r\nimport { TextField, Button, Divider } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function Signup() {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const { login } = useAuth();\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      const res = await login(email, password, false);\r\n      if (res.status === 200) {\r\n        history.push(\"/getstarted\");\r\n      } else {\r\n        setError(\"Sign In Failed\");\r\n      }\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Parent>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 overflow-hidden\">\r\n            <img className=\"img-fluid \" src=\"/images/employer.svg\" alt=\"\" />\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <FormStyle>\r\n              {error ? <Alert severity=\"error\">{error}</Alert> : \"\"}\r\n              <h3 className=\"mb-4 mt-2\">Employer Login</h3>\r\n              <div className=\"mb-3 mt-3\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  id=\"email\"\r\n                  label=\"Enter Email\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"mt-3 mb-3\">\r\n                <TextField\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  label=\"Enter Password\"\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n              </div>\r\n              <Button\r\n                className=\"mb-3 mt-3\"\r\n                disabled={loading}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSubmit}\r\n              >\r\n                LogIn\r\n              </Button>\r\n              <Divider light />\r\n              <div className=\"mt-3 mb-3 small text-muted\">\r\n                <Link to=\"/forgot-password\" className=\"font-weight-bold\">\r\n                  Forgot Password\r\n                </Link>\r\n              </div>\r\n              <div className=\"\">\r\n                <Link\r\n                  to=\"/applicant-login\"\r\n                  className=\"small text-decoration-none bg-primary text-white pl-3 pr-3 pb-1 font-weight-bold rounded-pill\"\r\n                >\r\n                  Applicant Login\r\n                </Link>\r\n              </div>\r\n            </FormStyle>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <form>\r\n            <input type=\"text\" placeholder=\"email\" ref={emailRef} />\r\n            <input type=\"password\" placeholder=\"password\" ref={passwordRef} />\r\n            <button disabled={loading}>Log In</button>\r\n          </form> */}\r\n      </Parent>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Parent = styled.div`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst FormStyle = styled.div`\r\n  max-width: 500px;\r\n  /* background-color: aqua; */\r\n  padding: 1rem;\r\n`;\r\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\ViewRole.jsx",["199","200","201","202","203"],"import React, { useEffect, useState } from \"react\";\r\nimport { Media } from \"reactstrap\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport {\r\n  deleteRoleFromServer,\r\n  viewRoleFromServer,\r\n} from \"../../Backend/sendRequestToServer\";\r\n\r\nconst ViewRole = () => {\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [searchResult, setSearchResult] = useState([]);\r\n\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    fetchBlogs();\r\n  }, []);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const handleReset = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  function checkIfSalesUser(emp) {\r\n    const designations = [\r\n      \"National Sales Head\",\r\n      \"Regional Sales Head\",\r\n      \"City Sales Head\",\r\n      \"Sales Executive\",\r\n    ];\r\n    return designations.includes(emp.designation);\r\n  }\r\n\r\n  // function edit blogs\r\n\r\n  function EditEmployee(id) {\r\n    console.log(\"this is \", id);\r\n    history.push(\"/edit-applicant\", id);\r\n  }\r\n\r\n  // custom button\r\n\r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: \"#FCBF00\",\r\n      color: \"white\",\r\n      fontWeight: \"bold\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#FCBF00\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  const fetchBlogs = async () => {\r\n    // const obj = {\r\n    //   id: \"123\",\r\n    //   name: \"Hr1\",\r\n    //   email: \"hr1@getnada.com\",\r\n    //   phone: \"90909090\",\r\n    //   role: \"Hr\",\r\n    //   privileges: [\"Add Hr\", \"View Hr\"],\r\n    // };\r\n    const res = await viewRoleFromServer();\r\n    if (res.status === 200) {\r\n      console.log({ res });\r\n      setBlogs(res.result);\r\n    } else setBlogs([]);\r\n  };\r\n\r\n  //  Search in textbox\r\n  const searchBlogResult = (val) => {\r\n    return blogs.filter((data) =>\r\n      data.role.toLowerCase().includes(val.toLowerCase())\r\n    );\r\n  };\r\n  const search = (e) => {\r\n    setSearchValue(e.target.value);\r\n    console.log(e.target.value);\r\n\r\n    setSearchResult(searchBlogResult(e.target.value));\r\n  };\r\n\r\n  const deleteRole = async (id) => {\r\n    const res = await deleteRoleFromServer({ id });\r\n    if (res.status === 200) {\r\n      console.log(\"Role Deleted\", res.result);\r\n      window.location.reload();\r\n    } else {\r\n      console.log(\"Error Occured\", res);\r\n    }\r\n  };\r\n\r\n  const editRole = async (role) => {\r\n    history.push(\"/add-role\", { role });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container mt-5 pt-5\">\r\n        <h2 style={{ textAlign: \"center\" }}>View Role</h2>\r\n        <div className=\"row pb-3 justify-content-center\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"col-10 col-md-6 search-box\"\r\n            placeholder=\"Search Role\"\r\n            onChange={(e) => {\r\n              search(e);\r\n            }}\r\n          />\r\n        </div>\r\n        {blogs.length === 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            <p>No Role yet!</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {blogs.length > 0 && searchValue === \"\" ? (\r\n              blogs.map((blog) => {\r\n                const prev = blog.permission_Arr\r\n                  ? JSON.parse(blog.permission_Arr)[\"privileges\"]\r\n                  : [];\r\n                return (\r\n                  <Media list key={blog.id} className=\"blog-card\">\r\n                    <Media tag=\"li\">\r\n                      <Media body>\r\n                        <Media heading>{blog.role}</Media>\r\n                        <p>Description: {blog.roleDescription}</p>\r\n                        <p>Privileges: {prev.toString()}</p>\r\n                        {localStorage.getItem(\"email\") !== blog.email && (\r\n                          <p className=\"view-edit\">\r\n                            <IconButton\r\n                              aria-label=\"edit\"\r\n                              id={blog.id}\r\n                              onClick={(e) => {\r\n                                console.log(\"Edit Applicant\");\r\n                                editRole(blog);\r\n                              }}\r\n                            >\r\n                              <CreateIcon />\r\n                            </IconButton>\r\n                            <IconButton\r\n                              aria-label=\"delete\"\r\n                              id={blog.id}\r\n                              onClick={(e) => {\r\n                                console.log(\"delete Applicant\");\r\n                                deleteRole(blog.id);\r\n                              }}\r\n                            >\r\n                              <DeleteIcon />\r\n                            </IconButton>\r\n                          </p>\r\n                        )}\r\n                      </Media>\r\n                    </Media>\r\n                  </Media>\r\n                );\r\n              })\r\n            ) : (\r\n              <>\r\n                {searchResult.length > 0 ? (\r\n                  searchResult.map((blog) => {\r\n                    const prev = blog.permission_Arr\r\n                      ? JSON.parse(blog.permission_Arr)[\"privileges\"]\r\n                      : [];\r\n                    return (\r\n                      <Media list key={blog.id} className=\"blog-card\">\r\n                        <Media tag=\"li\">\r\n                          <Media body>\r\n                            <Media heading>{blog.role}</Media>\r\n                            <p>Description: {blog.roleDescription}</p>\r\n                            <p>Priviledges: {prev.toString()}</p>\r\n                            {localStorage.getItem(\"email\") !== blog.email && (\r\n                              <p className=\"view-edit\">\r\n                                <IconButton\r\n                                  aria-label=\"edit\"\r\n                                  id={blog.id}\r\n                                  onClick={(e) => {\r\n                                    console.log(\"Edit applicant\");\r\n                                    editRole(blog);\r\n                                  }}\r\n                                >\r\n                                  <CreateIcon />\r\n                                </IconButton>\r\n                                <IconButton\r\n                                  aria-label=\"delete\"\r\n                                  id={blog.id}\r\n                                  onClick={(e) => {\r\n                                    console.log(\"delete applicant\");\r\n                                    deleteRole(blog.id);\r\n                                  }}\r\n                                >\r\n                                  <DeleteIcon />\r\n                                </IconButton>\r\n                              </p>\r\n                            )}\r\n                          </Media>\r\n                        </Media>\r\n                      </Media>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <>\r\n                    {searchValue !== \"\" ? (\r\n                      <div className=\"row pb-3 justify-content-center\">\r\n                        <div>Search Not Found!</div>\r\n                      </div>\r\n                    ) : (\r\n                      <div></div>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewRole;\r\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\AddRole.jsx",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport clsx from \"clsx\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport Favorite from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\n\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport { useHistory } from \"react-router\";\r\nimport { useState, useContext, useEffect } from \"react\";\r\nimport { drawerCollapseable, permissions } from \"../../Common/Constants\";\r\nimport Navbar from \"./Navbar\";\r\nimport { addRole, editRoleFromServer } from \"../../Backend/sendRequestToServer\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // minWidth: 275,\r\n    // margin: \"15px 15px 15px 15px\",\r\n    borderRadius: \"10px\",\r\n    padding: \"12px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    boxShadow: \"0 5px 10px rgba(0,0,0,0.19), 0 3px 3px rgba(0,0,0,0.21)\",\r\n  },\r\n  form: {\r\n    margin: \"15px 15px 15px 15px\",\r\n    borderRadius: \"10px\",\r\n    padding: \"12px\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n  },\r\n  pos: {\r\n    marginTop: 20,\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  bullet: {\r\n    display: \"inline-block\",\r\n    margin: \"0 2px\",\r\n    transform: \"scale(0.8)\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  label: {\r\n    color: \"#000\",\r\n  },\r\n\r\n  textField: {\r\n    \"& .MuiInputBase-input\": {\r\n      color: \"#000\",\r\n    },\r\n  },\r\n\r\n  errMsg: {\r\n    color: \"red\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"small\",\r\n    marginBottom: \"10px\",\r\n    textAlign: \"left\",\r\n  },\r\n}));\r\n\r\nconst AddRole = (props) => {\r\n  const [showMobileErr, setMobileErr] = useState(\"\");\r\n  const [showEmailErr, setEmailErr] = useState(\"\");\r\n  const [showPassErr, setPassErr] = useState(\"\");\r\n  let location = useLocation();\r\n  let isEdit = false,\r\n    state = location.state;\r\n  if (state && state.role) {\r\n    // console.log(state.role);\r\n    isEdit = true;\r\n  }\r\n  let history = useHistory();\r\n  const [showSpinner, setShowSpinner] = React.useState(false);\r\n  const handleReset = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  // feild empty err hooks\r\n  const [showTitleErr, setShowTitleErr] = React.useState(false);\r\n  const [showDescErr, setShowDescErr] = React.useState(false);\r\n  const [showLocationErr, setShowLocationErr] = React.useState(false);\r\n  const [showQualErr, setShowQualErr] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      setApplicant({\r\n        name: state.role.role,\r\n        roleDescription: state.role.roleDescription,\r\n        pageName: JSON.parse(state.role.permission_Arr)[\"privileges\"],\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleChangex = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  //priviledges dialog\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const ITEM_HEIGHT = 48;\r\n  const ITEM_PADDING_TOP = 8;\r\n\r\n  const MenuProps = {\r\n    PaperProps: {\r\n      style: {\r\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n        width: 250,\r\n        backgroundColor: \"#fff\",\r\n        color: \"#000\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const [applicant, setApplicant] = useState({\r\n    name: \"\",\r\n    roleDescription: \"\",\r\n    pageName: [],\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const { name, roleDescription, pageName } = applicant;\r\n\r\n  const onChange = (e) => {\r\n    console.log(e.target.name);\r\n    setApplicant({ ...applicant, [e.target.name]: e.target.value });\r\n    console.log(applicant.pageName);\r\n    switch (e.target.name) {\r\n      case \"phone\":\r\n        if (!validatePhone(e.target.value)) {\r\n          setMobileErr(\"Please Enter Valid Phone number\");\r\n        } else {\r\n          setMobileErr(\"\");\r\n        }\r\n        break;\r\n\r\n      case \"email\":\r\n        if (!validateEmail(e.target.value)) {\r\n          setEmailErr(\"Please Enter Valid Email\");\r\n        } else {\r\n          setEmailErr(\"\");\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onChangePrivilege = (e) => {\r\n    console.log(e.target.name);\r\n    const prv = e.target.value;\r\n    let tempArr = [];\r\n    if (e.target.checked) {\r\n      tempArr = applicant.pageName;\r\n      tempArr.push(prv);\r\n    } else {\r\n      tempArr = applicant.pageName;\r\n      const index = tempArr.indexOf(prv);\r\n      tempArr.splice(index, 1);\r\n    }\r\n\r\n    setApplicant({ ...applicant, pageName: tempArr });\r\n\r\n    console.log(applicant.pageName);\r\n  };\r\n\r\n  const addRoleButton = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name === \"\" || roleDescription === \"\" || pageName.length === 0) {\r\n      alert(\"Please enter all fields\");\r\n    } else if (showEmailErr !== \"\" || showMobileErr !== \"\") {\r\n      console.log(\"Email or phone is wrong\");\r\n      return false;\r\n    } else {\r\n      setShowSpinner(true);\r\n      const res = await addRole({\r\n        role: name,\r\n        roleDescription: roleDescription,\r\n        permission_Arr: JSON.stringify({ privileges: pageName }),\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        setShowSpinner(false);\r\n        swal(\"Success!\", \"Role Added\", \"success\").then((value) =>\r\n          handleReset()\r\n        );\r\n      } else {\r\n        setShowSpinner(false);\r\n        console.log(res);\r\n        swal(\"Failed!\", \"Failed to create Role. Try Again!!!\", \"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const editRoleButton = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (name === \"\" || roleDescription === \"\" || pageName.length === 0) {\r\n      alert(\"Please enter all fields\");\r\n    } else if (showEmailErr !== \"\" || showMobileErr !== \"\") {\r\n      console.log(\"Email or phone is wrong\");\r\n      return false;\r\n    } else {\r\n      setShowSpinner(true);\r\n      const res = await editRoleFromServer({\r\n        ...state.role,\r\n        role: name,\r\n        roleDescription: roleDescription,\r\n        permission_Arr: JSON.stringify({ privileges: pageName }),\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        setShowSpinner(false);\r\n        swal(\"Success!\", \"Role Edited\", \"success\").then((value) =>\r\n          history.push(\"/view-role\")\r\n        );\r\n      } else {\r\n        setShowSpinner(false);\r\n        console.log(res);\r\n        swal(\"Failed!\", \"Failed to create Role. Try Again!!!\", \"error\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // email validation\r\n  const validateEmail = (email) => {\r\n    const re =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  };\r\n  // phone validation\r\n  const validatePhone = (mob) => {\r\n    const re = /^[0-9]{10}$/;\r\n    return re.test(mob);\r\n  };\r\n\r\n  // custom button\r\n\r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: \"#FCBF00\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#FCBF00\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  // const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container mt-5 pt-5\">\r\n        <div className=\"row align-items-center justify-content-center\">\r\n          <div className=\"col-12 col-md-6\">\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  {isEdit ? \"Edit Role\" : \"Add Role\"}\r\n                </Typography>\r\n                <form className={classes.form} noValidate autoComplete=\"off\">\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\" Role Name*\"\r\n                    name=\"name\"\r\n                    variant=\"outlined\"\r\n                    value={name}\r\n                    onChange={onChange}\r\n                    error={showTitleErr}\r\n                    helperText={showTitleErr && \"Please Enter Name\"}\r\n                    style={{ marginBottom: \"10px\" }}\r\n                  />\r\n\r\n                  <TextField\r\n                    id=\"outlined-basic\"\r\n                    label=\" Role Description*\"\r\n                    name=\"roleDescription\"\r\n                    variant=\"outlined\"\r\n                    value={roleDescription}\r\n                    onChange={onChange}\r\n                    error={showTitleErr}\r\n                    helperText={showTitleErr && \"Please Enter Description\"}\r\n                    style={{ marginBottom: \"10px\" }}\r\n                  />\r\n\r\n                  <br />\r\n\r\n                  <div>\r\n                    <b style={{ marginBottom: \"10px\" }}>Selected Privileges:</b>\r\n                    {applicant.pageName.map((value, index) => {\r\n                      return <span key={index}>{value}; </span>;\r\n                    })}\r\n                  </div>\r\n                </form>\r\n                <div>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={handleClickOpen}\r\n                  >\r\n                    Add Privileges\r\n                  </Button>\r\n                  <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                  >\r\n                    <DialogTitle id=\"alert-dialog-title\">\r\n                      {\"Select Privileges\"}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                      {Object.keys(permissions).map((page, index) => (\r\n                        <Accordion\r\n                          expanded={expanded === page}\r\n                          onChange={handleChangex(page)}\r\n                          key={page}\r\n                        >\r\n                          <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel2bh-content\"\r\n                            id=\"panel2bh-header\"\r\n                          >\r\n                            <Typography className={classes.heading}>\r\n                              {page}\r\n                            </Typography>\r\n                          </AccordionSummary>\r\n                          <AccordionDetails>\r\n                            <FormGroup row>\r\n                              {permissions[page].map((pagex) => (\r\n                                <FormControlLabel\r\n                                  key={pagex}\r\n                                  control={\r\n                                    <Checkbox\r\n                                      name=\"pageName\"\r\n                                      value={pagex}\r\n                                      checked={\r\n                                        applicant.pageName.indexOf(pagex) > -1\r\n                                      }\r\n                                      onChange={onChangePrivilege}\r\n                                    />\r\n                                  }\r\n                                  label={pagex}\r\n                                />\r\n                              ))}\r\n                            </FormGroup>\r\n                          </AccordionDetails>\r\n                        </Accordion>\r\n                      ))}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                      </Button>\r\n                      <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Save\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </div>\r\n              </CardContent>\r\n              <div>\r\n                {showSpinner ? (\r\n                  <div>\r\n                    <span style={{ marginLeft: \"10px\", color: \"#ff0000\" }}>\r\n                      <h5>Please DO NOT REFRESH the page...</h5>\r\n                    </span>\r\n                    <CircularProgress\r\n                      style={{\r\n                        color: \"#18D26E\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div></div>\r\n                )}\r\n              </div>\r\n              <CardActions\r\n                style={{ justifyContent: \"center\", fontWeight: \"bold\" }}\r\n              >\r\n                <ColorButton\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={(e) => {\r\n                    console.log(\"Add User function\");\r\n                    if (isEdit) {\r\n                      editRoleButton(e);\r\n                    } else addRoleButton(e);\r\n                  }}\r\n                >\r\n                  {isEdit ? \"Edit Role\" : \" Add Role\"}\r\n                </ColorButton>\r\n              </CardActions>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddRole;\r\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\ViewPostedJob.jsx",["241","242"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  viewJobFromServer,\r\n  viewUserFromServer,\r\n} from \"../../Backend/sendRequestToServer\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\n\r\n//component\r\nimport Job from \"./Job\";\r\nimport Navbar from \"./Navbar\";\r\n\r\n//material UI\r\n\r\nexport default function ViewPostedJob() {\r\n  //states\r\n  const [jobList, setJobList] = useState([]);\r\n\r\n  const { currentUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    viewJobFromServer().then((jobList) => {\r\n      if (jobList.status === 200)\r\n        if (currentUser.role === \"Super Admin\") setJobList(jobList.result);\r\n        else\r\n          setJobList(\r\n            jobList.result.filter(\r\n              (job) => job.employerEmail === currentUser.emailId\r\n            )\r\n          );\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"container p-3\">\r\n        <h3 className=\"mt-3 text-center\">View Posted Job</h3> <br />\r\n        <div className=\"row m-0\">\r\n          {jobList\r\n            ? jobList.map((job, index) => <Job job={job} key={index} />)\r\n            : \"\"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\PostJob.jsx",["243","244"],"import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport styled from \"styled-components\";\r\n\r\n//components\r\nimport Navbar from \"./Navbar\";\r\n\r\n//material UI\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport swal from \"sweetalert\";\r\nimport { addJob } from \"../../Backend/sendRequestToServer\";\r\n\r\nexport default function PostJob() {\r\n  const { currentUser } = useAuth();\r\n\r\n  const initFieldValues = {\r\n    jobTitle: \"\",\r\n    jobType: \"In-office\",\r\n    city: \"\",\r\n    openings: \"\",\r\n    description: \"\",\r\n    skills: \"\",\r\n    ctc: \"\",\r\n    uid: currentUser ? currentUser.id : \"\",\r\n    employerEmail: currentUser ? currentUser.emailId : \"\",\r\n  };\r\n\r\n  //states\r\n  const [values, setValues] = useState(initFieldValues);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleInputChange = (e) => {\r\n    var { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleReset = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const handlePostSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    const res = await addJob(values);\r\n\r\n    if (res.status === 200) {\r\n      setLoading(false);\r\n\r\n      swal(\"Success!\", \"Job Added\", \"success\").then((value) => {\r\n        history.push(\"/view-posted-jobs\");\r\n      });\r\n    } else {\r\n      console.log(res);\r\n      setLoading(false);\r\n\r\n      swal(\"Failed!\", \"Failed to create Jobs. Try Again!!!\", \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Parent>\r\n        <div className=\"container\">\r\n          {error ? <Alert severity=\"error\">{error}</Alert> : \"\"}\r\n          <h3 className=\"mt-3 mb-3 text-center\">Post Job</h3>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n              <Grid>\r\n                <Grid item xs=\"12\">\r\n                  <div className=\"mb-3 mt-3\">\r\n                    <TextField\r\n                      type=\"text\"\r\n                      id=\"jobtitle\"\r\n                      label=\"Job Title\"\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      name=\"jobTitle\"\r\n                      value={values.jobTitle}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs=\"12\">\r\n                  <div className=\"form-group\">\r\n                    <select\r\n                      className=\"form-control w-50\"\r\n                      name=\"jobType\"\r\n                      value={values.jobType}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                    >\r\n                      <option>In-office</option>\r\n                      <option>Remote</option>\r\n                    </select>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs=\"12\">\r\n                  <div className=\"mb-3 mt-3\">\r\n                    <TextField\r\n                      type=\"text\"\r\n                      id=\"city\"\r\n                      label=\"City\"\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      name=\"city\"\r\n                      value={values.city}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs=\"12\">\r\n                  <div className=\"mb-3 mt-3\">\r\n                    <TextField\r\n                      type=\"text\"\r\n                      id=\"openings\"\r\n                      label=\"Openings\"\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      name=\"openings\"\r\n                      value={values.openings}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs=\"12\">\r\n                  <div className=\"mb-3 mt-3\">\r\n                    <TextField\r\n                      type=\"text\"\r\n                      id=\"skills\"\r\n                      label=\"Skills\"\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      name=\"skills\"\r\n                      value={values.skills}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs=\"12\">\r\n                  <div className=\"mb-3 mt-3\">\r\n                    <TextField\r\n                      type=\"text\"\r\n                      id=\"ctc\"\r\n                      label=\"CTC\"\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      name=\"ctc\"\r\n                      value={values.ctc}\r\n                      onChange={handleInputChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <div className=\"mb-3 mt-3\">\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    value={values.description}\r\n                    rows=\"12\"\r\n                    placeholder=\"Job Description\"\r\n                    name=\"description\"\r\n                    value={values.description}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            className=\"mb-3 mt-3\"\r\n            disabled={loading}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handlePostSubmit}\r\n          >\r\n            Post Job\r\n          </Button>\r\n          {/* <form onSubmit={handlePostSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Job Title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"jobTitle\"\r\n                value={values.jobTitle}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Job Type</label>\r\n              <select\r\n                className=\"form-control\"\r\n                name=\"jobType\"\r\n                value={values.jobType}\r\n                onChange={handleInputChange}\r\n              >\r\n                <option>In-office</option>\r\n                <option>Remote</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>City</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"city\"\r\n                value={values.city}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>No of Openings</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"openings\"\r\n                value={values.openings}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Job Description</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                value={values.description}\r\n                rows=\"3\"\r\n                name=\"description\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Skills required</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"skills\"\r\n                value={values.skills}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>CTC</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"ctc\"\r\n                value={values.ctc}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <button disabled={loading} type=\"submit\">\r\n              Post\r\n            </button>\r\n          </form> */}\r\n        </div>\r\n      </Parent>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Parent = styled.div`\r\n  padding: 1rem;\r\n`;\r\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\GetStarted.jsx",["245","246","247","248","249","250","251","252","253","254","255","256"],"import React, { useEffect, useState } from \"react\";\r\nimport { Media } from \"reactstrap\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\nimport {\r\n  deleteRoleFromServer,\r\n  viewRoleFromServer,\r\n} from \"../../Backend/sendRequestToServer\";\r\nimport \"./landing.css\";\r\n\r\nconst GetStarted = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"landing\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetStarted;\r\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\ViewCandidates.jsx",["257"],"import React, { useState, useEffect } from \"react\";\nimport {\n  viewAppliedJobFromServer,\n  viewUserFromServer,\n} from \"../../Backend/sendRequestToServer\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\n//components\nimport Candidates from \"./Candidates\";\nimport Navbar from \"./Navbar\";\n\nexport default function ViewCandidates() {\n  const { currentUser } = useAuth();\n\n  const [appliedjobList, setappliedJobList] = useState(\"\");\n\n  useEffect(() => {\n    getAppliedJobs();\n  }, []);\n\n  async function getAppliedJobs() {\n    let users = {};\n    const res = await viewUserFromServer();\n    if (res.status === 200) {\n      for (let user of res.result) {\n        users[user.emailId] = user.resumeUrl ?? \"\";\n      }\n      console.log(res.result);\n    }\n\n    let jobList = await viewAppliedJobFromServer();\n\n    if (jobList.status === 200) {\n      let tempJobs = [];\n      for (let job of jobList.result) {\n        job.resumeUrl = users[job.email] ?? \"\";\n        tempJobs.push(job);\n      }\n      if (currentUser.role === \"Super Admin\") setappliedJobList(tempJobs);\n      else\n        setappliedJobList(\n          tempJobs.filter((job) => job.employerEmail === currentUser.emailId)\n        );\n    }\n  }\n\n  console.log(appliedjobList);\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container p-3\">\n        <h3 className=\"mt-3 mb-2 text-center\">View Applied Candidates</h3>{\" \"}\n        <br />\n        <div className=\"row m-0\">\n          {appliedjobList\n            ? appliedjobList.map((appliedjob, index) => (\n                <Candidates appliedjob={appliedjob} key={index} />\n              ))\n            : \"\"}\n        </div>\n      </div>\n    </>\n  );\n}\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\AddUser.jsx",["258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport clsx from \"clsx\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { green } from \"@material-ui/core/colors\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { useHistory } from \"react-router\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { drawerCollapseable } from \"../../Common/Constants\";\nimport Navbar from \"./Navbar\";\nimport {\n  addUser,\n  editUserFromServer,\n  viewRoleFromServer,\n} from \"../../Backend/sendRequestToServer\";\nimport swal from \"sweetalert\";\nimport { useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // minWidth: 275,\n    // margin: \"15px 15px 15px 15px\",\n    borderRadius: \"10px\",\n    padding: \"12px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    boxShadow: \"0 5px 10px rgba(0,0,0,0.19), 0 3px 3px rgba(0,0,0,0.21)\",\n  },\n  form: {\n    margin: \"15px 15px 15px 15px\",\n    borderRadius: \"10px\",\n    padding: \"12px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  pos: {\n    marginTop: 20,\n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  label: {\n    color: \"#000\",\n  },\n\n  textField: {\n    \"& .MuiInputBase-input\": {\n      color: \"#000\",\n    },\n  },\n\n  errMsg: {\n    color: \"red\",\n    fontWeight: \"bold\",\n    fontSize: \"small\",\n    marginBottom: \"10px\",\n    textAlign: \"left\",\n  },\n}));\n\nconst AddUser = (props) => {\n  const [showMobileErr, setMobileErr] = useState(\"\");\n  const [showEmailErr, setEmailErr] = useState(\"\");\n  const [showPassErr, setPassErr] = useState(\"\");\n\n  let location = useLocation();\n  let isEdit = false,\n    state = location.state;\n  if (state && state.user) {\n    // console.log(state.role);\n    isEdit = true;\n  }\n\n  let history = useHistory();\n  const [showSpinner, setShowSpinner] = React.useState(false);\n  const handleReset = () => {\n    window.location.reload();\n  };\n\n  // feild empty err hooks\n  const [showTitleErr, setShowTitleErr] = React.useState(false);\n  const [showDescErr, setShowDescErr] = React.useState(false);\n  const [showLocationErr, setShowLocationErr] = React.useState(false);\n  const [showQualErr, setShowQualErr] = React.useState(false);\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  useEffect(() => {\n    if (isEdit) {\n      console.log(state.user);\n      setApplicant({\n        name: state.user.userName,\n        email: state.user.emailId,\n        phone: state.user.number,\n        role: state.user.role,\n      });\n    }\n  }, []);\n\n  const handleChangex = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  //priviledges dialog\n  const [open, setOpen] = React.useState(false);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n        backgroundColor: \"#fff\",\n        color: \"#000\",\n      },\n    },\n  };\n\n  const [applicant, setApplicant] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    role: \"\",\n  });\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const { name, email, password, phone, role } = applicant;\n  const [roles, setRoles] = useState([]);\n\n  useEffect(() => {\n    viewRoleFromServer().then((roles) => {\n      if (roles.status === 200) setRoles(roles.result);\n    });\n  }, []);\n\n  const onChange = (e) => {\n    console.log(e.target.name);\n    setApplicant({ ...applicant, [e.target.name]: e.target.value });\n    switch (e.target.name) {\n      case \"phone\":\n        if (!validatePhone(e.target.value)) {\n          setMobileErr(\"Please Enter Valid Phone number\");\n        } else {\n          setMobileErr(\"\");\n        }\n        break;\n\n      case \"email\":\n        if (!validateEmail(e.target.value)) {\n          setEmailErr(\"Please Enter Valid Email\");\n        } else {\n          setEmailErr(\"\");\n        }\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const addUserButton = async (e) => {\n    e.preventDefault();\n\n    if (email === \"\" || password === \"\" || name === \"\" || phone === \"\") {\n      alert(\"Please enter all fields\");\n    } else if (showEmailErr !== \"\" || showMobileErr !== \"\") {\n      console.log(\"Email or phone is wrong\");\n      return false;\n    } else {\n      setShowSpinner(true);\n      const res = await addUser({\n        userName: name,\n        emailId: email,\n        number: phone,\n        password: password,\n        role: role,\n      });\n\n      if (res.status === 200) {\n        setShowSpinner(false);\n        swal(\"Success!\", \"User Added\", \"success\").then((value) =>\n          handleReset()\n        );\n      } else {\n        setShowSpinner(false);\n        console.log(res);\n        swal(\"Failed!\", \"Failed to create User. Try Again!!!\", \"error\");\n      }\n    }\n  };\n\n  const editUserButton = async (e) => {\n    e.preventDefault();\n\n    if (email === \"\" || name === \"\" || phone === \"\") {\n      alert(\"Please enter all fields\");\n    } else if (showEmailErr !== \"\" || showMobileErr !== \"\") {\n      console.log(\"Email or phone is wrong\");\n      return false;\n    } else {\n      setShowSpinner(true);\n      const res = await editUserFromServer({\n        id: state.user.id,\n        userName: name,\n        emailId: email,\n        number: phone,\n        role: role,\n      });\n\n      if (res.status === 200) {\n        setShowSpinner(false);\n        swal(\"Success!\", \"User Edit\", \"success\").then((value) =>\n          history.push(\"/view-user\")\n        );\n      } else {\n        setShowSpinner(false);\n        console.log(res);\n        swal(\"Failed!\", \"Failed to edit User. Try Again!!!\", \"error\");\n      }\n    }\n  };\n\n  // email validation\n  const validateEmail = (email) => {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n  // phone validation\n  const validatePhone = (mob) => {\n    const re = /^[0-9]{10}$/;\n    return re.test(mob);\n  };\n\n  // custom button\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n      backgroundColor: \"#FCBF00\",\n      \"&:hover\": {\n        backgroundColor: \"#FCBF00\",\n      },\n    },\n  }))(Button);\n\n  // const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container mt-5 pt-5\">\n        <div className=\"row align-items-center justify-content-center\">\n          <div className=\"col-12 col-md-6\">\n            <Card className={classes.root} variant=\"outlined\">\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  {isEdit ? \"Edit User\" : \"Add User\"}\n                </Typography>\n                <form className={classes.form} noValidate autoComplete=\"off\">\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"Name*\"\n                    name=\"name\"\n                    variant=\"outlined\"\n                    value={name}\n                    onChange={onChange}\n                    error={showTitleErr}\n                    helperText={showTitleErr && \"Please Enter Name\"}\n                    style={{ marginBottom: \"10px\" }}\n                  />\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"Email*\"\n                    name=\"email\"\n                    variant=\"outlined\"\n                    value={email}\n                    onChange={onChange}\n                    error={showDescErr}\n                    helperText={showDescErr && \"Please Enter Email\"}\n                  />\n                  <span className={classes.errMsg}>{showEmailErr}</span>\n                  {!isEdit && (\n                    <>\n                      {\" \"}\n                      <TextField\n                        label=\"Password*\"\n                        name=\"password\"\n                        type=\"password\"\n                        variant=\"outlined\"\n                        onChange={onChange}\n                        error={showDescErr}\n                        helperText={showDescErr && \"Please Enter Email\"}\n                      />\n                      <span className={classes.errMsg}>{showPassErr}</span>\n                    </>\n                  )}\n                  <TextField\n                    variant=\"outlined\"\n                    aria-label=\"empty textarea\"\n                    label=\"Phone*\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={onChange}\n                    error={showQualErr}\n                    helperText={showQualErr && \"Please Enter Phone\"}\n                  />\n                  <span className={classes.errMsg}>{showMobileErr}</span>\n\n                  <br />\n\n                  <TextField\n                    select\n                    variant=\"outlined\"\n                    label=\"Select Role*\"\n                    name=\"role\"\n                    value={role}\n                    onChange={onChange}\n                    // error={showQualErr}\n                    // helperText={showQualErr && \"Please Enter Phone\"}\n                  >\n                    {roles.map((option) => (\n                      <MenuItem key={option.id} value={option.role}>\n                        {option.role}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </form>\n              </CardContent>\n              <div>\n                {showSpinner ? (\n                  <div>\n                    <span style={{ marginLeft: \"10px\", color: \"#ff0000\" }}>\n                      <h5>Please DO NOT REFRESH the page...</h5>\n                    </span>\n                    <CircularProgress\n                      style={{\n                        color: \"#18D26E\",\n                      }}\n                    />\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n              <CardActions\n                style={{ justifyContent: \"center\", fontWeight: \"bold\" }}\n              >\n                <ColorButton\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={(e) => {\n                    if (isEdit) {\n                      editUserButton(e);\n                    } else {\n                      console.log(\"Add User function\");\n                      addUserButton(e);\n                    }\n                  }}\n                >\n                  {isEdit ? \"Edit User\" : \"Add User\"}{\" \"}\n                </ColorButton>\n              </CardActions>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddUser;\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\ViewUsers.jsx",["307","308","309","310"],"import React, { useEffect, useState } from \"react\";\nimport { Media } from \"reactstrap\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport Navbar from \"./Navbar\";\nimport {\n  deleteUserFromServer,\n  viewUserFromServer,\n} from \"../../Backend/sendRequestToServer\";\n\nconst ViewUsers = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n\n  let history = useHistory();\n\n  useEffect(() => {\n    fetchBlogs();\n  }, []);\n\n  const useStyles = makeStyles((theme) => ({\n    button: {\n      margin: theme.spacing(1),\n    },\n  }));\n  const classes = useStyles();\n\n  const handleReset = () => {\n    window.location.reload();\n  };\n\n  function checkIfSalesUser(emp) {\n    const designations = [\n      \"National Sales Head\",\n      \"Regional Sales Head\",\n      \"City Sales Head\",\n      \"Sales Executive\",\n    ];\n    return designations.includes(emp.designation);\n  }\n\n  // custom button\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n      backgroundColor: \"#FCBF00\",\n      color: \"white\",\n      fontWeight: \"bold\",\n      \"&:hover\": {\n        backgroundColor: \"#FCBF00\",\n      },\n    },\n  }))(Button);\n\n  const fetchBlogs = async () => {\n    // const obj = {\n    //   id: \"123\",\n    //   name: \"Hr1\",\n    //   email: \"hr1@getnada.com\",\n    //   phone: \"90909090\",\n    //   role: \"Hr\",\n    //   privileges: [\"Add Hr\", \"View Hr\"],\n    // };\n    const res = await viewUserFromServer();\n    if (res.status === 200) {\n      console.log({ res });\n      setBlogs(res.result);\n    } else setBlogs([]);\n  };\n\n  //  Search in textbox\n  const searchBlogResult = (val) => {\n    return blogs.filter((data) =>\n      data.userName.toLowerCase().includes(val.toLowerCase())\n    );\n  };\n  const search = (e) => {\n    setSearchValue(e.target.value);\n    console.log(e.target.value);\n\n    setSearchResult(searchBlogResult(e.target.value));\n  };\n\n  const editUser = (user) => {\n    history.push(\"/add-user\", { user });\n  };\n\n  const deleteUser = async (id) => {\n    const res = await deleteUserFromServer({ id });\n    if (res.status === 200) {\n      console.log(\"User Deleted\", res.result);\n      window.location.reload();\n    } else {\n      console.log(\"Error Occured\", res);\n    }\n  };\n  const prev = JSON.parse(localStorage.getItem(\"previleges\")) || [];\n  const editP = prev.includes(\"Edit User\");\n  const deleteP = prev.includes(\"Delete User\");\n\n  const UserCard = ({ blog }) => {\n    return (\n      <Media list key={blog.id} className=\"blog-card\">\n        <Media tag=\"li\">\n          <Media body>\n            <Media heading>{blog.userName}</Media>\n            <p className=\"author-name\">Email : {blog.emailId}</p>\n            <p>Phone: {blog.number}</p>\n            {/* <p>Designation: {blog.designation}</p> */}\n            <p>Role: {blog.role}</p>\n\n            <p className=\"view-edit\">\n              {editP && (\n                <IconButton\n                  aria-label=\"edit\"\n                  id={blog.id}\n                  onClick={(e) => {\n                    console.log(\"Edit User\");\n                    editUser(blog);\n                  }}\n                >\n                  <CreateIcon />\n                </IconButton>\n              )}\n              {deleteP && (\n                <IconButton\n                  aria-label=\"delete\"\n                  id={blog.id}\n                  onClick={(e) => {\n                    console.log(\"delete User\");\n                    deleteUser(blog.id);\n                  }}\n                >\n                  <DeleteIcon />\n                </IconButton>\n              )}\n            </p>\n          </Media>\n        </Media>\n      </Media>\n    );\n  };\n  return (\n    <>\n      <Navbar />\n      <div className=\"container mt-5 pt-5\">\n        <h2 style={{ textAlign: \"center\" }}>View User</h2>\n        <div className=\"row pb-3 justify-content-center\">\n          <input\n            type=\"text\"\n            className=\"col-10 col-md-6 search-box\"\n            placeholder=\"Search User\"\n            onChange={(e) => {\n              search(e);\n            }}\n          />\n        </div>\n        {blogs.length === 0 ? (\n          <div className=\"row justify-content-center\">\n            <p>No User's yet!</p>\n          </div>\n        ) : (\n          <>\n            {blogs.length > 0 && searchValue === \"\" ? (\n              blogs.map((blog) => {\n                return <UserCard blog={blog} />;\n              })\n            ) : (\n              <>\n                {searchResult.length > 0 ? (\n                  searchResult.map((blog) => {\n                    return <UserCard blog={blog} />;\n                  })\n                ) : (\n                  <>\n                    {searchValue !== \"\" ? (\n                      <div className=\"row pb-3 justify-content-center\">\n                        <div>Search Not Found!</div>\n                      </div>\n                    ) : (\n                      <div></div>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ViewUsers;\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\ResetPassword.jsx",["311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport clsx from \"clsx\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { green } from \"@material-ui/core/colors\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { useHistory } from \"react-router\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { drawerCollapseable } from \"../../Common/Constants\";\nimport Navbar from \"./Navbar\";\nimport {\n  addUser,\n  changePassword,\n  viewRoleFromServer,\n} from \"../../Backend/sendRequestToServer\";\nimport swal from \"sweetalert\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // minWidth: 275,\n    // margin: \"15px 15px 15px 15px\",\n    borderRadius: \"10px\",\n    padding: \"12px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    boxShadow: \"0 5px 10px rgba(0,0,0,0.19), 0 3px 3px rgba(0,0,0,0.21)\",\n  },\n  form: {\n    margin: \"15px 15px 15px 15px\",\n    borderRadius: \"10px\",\n    padding: \"12px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  pos: {\n    marginTop: 20,\n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  label: {\n    color: \"#000\",\n  },\n\n  textField: {\n    \"& .MuiInputBase-input\": {\n      color: \"#000\",\n    },\n  },\n\n  errMsg: {\n    color: \"red\",\n    fontWeight: \"bold\",\n    fontSize: \"small\",\n    marginBottom: \"10px\",\n    textAlign: \"left\",\n  },\n}));\n\nconst ResetPassword = (props) => {\n  let history = useHistory();\n  const [showSpinner, setShowSpinner] = React.useState(false);\n  const handleReset = () => {\n    history.push(\"/\");\n  };\n  const { currentUser } = useAuth();\n\n  const classes = useStyles();\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n        backgroundColor: \"#fff\",\n        color: \"#000\",\n      },\n    },\n  };\n\n  const [password, setPassword] = useState({\n    oldPass: \"\",\n    newPass: \"\",\n    confirmPass: \"\",\n  });\n\n  const { oldPass, newPass, confirmPass } = password;\n\n  const resetButton = async (e) => {\n    e.preventDefault();\n\n    if (oldPass === \"\" || newPass === \"\" || confirmPass === \"\") {\n      alert(\"Please enter all fields\");\n    } else if (newPass !== confirmPass) {\n      alert(\"Please make sure both new passwords are equal\");\n    } else {\n      setShowSpinner(true);\n      const res = await changePassword({\n        ...currentUser,\n        oldPass: oldPass,\n        newPass: newPass,\n      });\n\n      if (res.status === 200) {\n        setShowSpinner(false);\n        swal(\"Success!\", \"PassWord Changed\", \"success\").then((value) =>\n          handleReset()\n        );\n      } else {\n        setShowSpinner(false);\n        console.log(res);\n        swal(\"Failed!\", \"Failed to change password. Try Again!!!\", \"error\");\n      }\n    }\n  };\n\n  // email validation\n  const validateEmail = (email) => {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  };\n  // phone validation\n  const validatePhone = (mob) => {\n    const re = /^[0-9]{10}$/;\n    return re.test(mob);\n  };\n\n  // custom button\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n      backgroundColor: \"#FCBF00\",\n      \"&:hover\": {\n        backgroundColor: \"#FCBF00\",\n      },\n    },\n  }))(Button);\n\n  // const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  const onChange = (e) => {\n    setPassword({ ...password, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container mt-5 pt-5\">\n        <div className=\"row align-items-center justify-content-center\">\n          <div className=\"col-12 col-md-6\">\n            <Card className={classes.root} variant=\"outlined\">\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  Reset Password\n                </Typography>\n                <form className={classes.form} noValidate autoComplete=\"off\">\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"Old Password*\"\n                    name=\"oldPass\"\n                    variant=\"outlined\"\n                    type=\"password\"\n                    onChange={onChange}\n                    style={{ marginBottom: \"10px\" }}\n                  />\n                  <TextField\n                    id=\"outlined-basic\"\n                    label=\"New Password*\"\n                    name=\"newPass\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    onChange={onChange}\n                    style={{ marginBottom: \"10px\" }}\n                  />\n                  <TextField\n                    label=\"Password*\"\n                    label=\"Confirm Password*\"\n                    name=\"confirmPass\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    onChange={onChange}\n                  />\n                </form>\n              </CardContent>\n              <div>\n                {showSpinner ? (\n                  <div>\n                    <span style={{ marginLeft: \"10px\", color: \"#ff0000\" }}>\n                      <h5>Please DO NOT REFRESH the page...</h5>\n                    </span>\n                    <CircularProgress\n                      style={{\n                        color: \"#18D26E\",\n                      }}\n                    />\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n              <CardActions\n                style={{ justifyContent: \"center\", fontWeight: \"bold\" }}\n              >\n                <ColorButton\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={(e) => {\n                    console.log(\"Reset function\");\n                    resetButton(e);\n                  }}\n                >\n                  Reset\n                </ColorButton>\n              </CardActions>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ResetPassword;\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\ApplicantSignup.jsx",["355"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport styled from \"styled-components\";\nimport swal from \"sweetalert\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\n\n//material UI\nimport { TextField, Button, Divider } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { addUser } from \"../../Backend/sendRequestToServer\";\nimport \"./signup.css\";\n\nexport default function ApplicantSignup() {\n  const [email, setEmail] = useState();\n  const [name, setName] = useState();\n  const [phone, setPhone] = useState();\n  const [password, setPassword] = useState();\n  const [confPassword, setConfPassword] = useState();\n  const [resume, setResume] = useState();\n  const [fileChosen, setFileChosen] = useState(\"No file chosen\");\n\n  const { signup } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const storage = firebase.storage();\n\n  function handleFileChange(e) {\n    setResume(e.target.files[0]);\n    setFileChosen(e.target.files[0].name);\n  }\n\n  async function uploadResume() {\n    const uploadTask = storage.ref(`resume/${email}-${fileChosen}`).put(resume);\n    const url = await (await uploadTask).ref.getDownloadURL();\n    return url;\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    if (password !== confPassword) {\n      return setError(\"Passwords do not match\");\n    }\n\n    if (!resume) {\n      return setError(\"Upload Resume\");\n    }\n\n    try {\n      setError(\"\");\n      setLoading(true);\n\n      const downloadUrl = await uploadResume();\n      console.log(downloadUrl);\n      // await signup(email, password);\n      const res = await addUser({\n        userName: name,\n        emailId: email,\n        number: phone,\n        password: password,\n        role: \"Candidate\",\n        resumeUrl: downloadUrl,\n      });\n\n      if (res.status === 200) {\n        setLoading(false);\n        history.push(\"/applicant-login\");\n      } else {\n        setLoading(false);\n        console.log(res);\n        swal(\"Failed!\", \"Failed to create User. Try Again!!!\", \"error\");\n      }\n\n      // history.push(\"/employee-login\");\n    } catch {\n      setError(\"Failed to create an account\");\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Parent>\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <FormStyle>\n              {error ? <Alert severity=\"error\">{error}</Alert> : \"\"}\n              <h3 className=\"mb-4 mt-2\">Applicant Sign Up</h3>\n              <div className=\"mb-3 mt-3\">\n                <TextField\n                  type=\"text\"\n                  id=\"name\"\n                  label=\"Enter Name\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  fullWidth\n                  size=\"small\"\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n              <div className=\"mb-3 mt-3\">\n                <TextField\n                  type=\"text\"\n                  id=\"phone\"\n                  label=\"Enter Phone no\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  fullWidth\n                  size=\"small\"\n                  onChange={(e) => setPhone(e.target.value)}\n                />\n              </div>\n              <div className=\"mb-3 mt-3\">\n                <TextField\n                  type=\"text\"\n                  id=\"email\"\n                  label=\"Enter Email\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  fullWidth\n                  size=\"small\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div className=\"mt-3 mb-3\">\n                <TextField\n                  type=\"password\"\n                  id=\"password\"\n                  label=\"Enter Password\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  fullWidth\n                  size=\"small\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </div>\n              <div className=\"mt-3 mb-3\">\n                <TextField\n                  type=\"password\"\n                  id=\"confpassword\"\n                  label=\"Confirm Password\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  fullWidth\n                  size=\"small\"\n                  onChange={(e) => setConfPassword(e.target.value)}\n                />\n              </div>\n\n              <div className=\"mt-3 mb-3\">\n                Upload Resume\n                <br />\n                <input\n                  accept=\".pdf\"\n                  type=\"file\"\n                  id=\"actual-btn\"\n                  hidden\n                  onChange={handleFileChange}\n                />\n                <label id=\"upload-label\" for=\"actual-btn\">\n                  Choose File\n                </label>\n                <span id=\"file-chosen\">{fileChosen}</span>\n              </div>\n              <Button\n                className=\"mb-3 mt-3\"\n                disabled={loading}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleSubmit}\n              >\n                Sign Up\n              </Button>\n              <Divider light />\n\n              <div className=\"small text-muted mt-2 mb-2\">\n                Already have an account?{\" \"}\n                <Link to=\"/applicant-login\" className=\"font-weight-bold\">\n                  Log In\n                </Link>\n              </div>\n              <div className=\"small text-muted\">\n                Login as{\" \"}\n                <Link to=\"/employer-login\" className=\"font-weight-bold\">\n                  Employer\n                </Link>\n              </div>\n              {/* <form onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"email\" ref={emailRef} id=\"email\" />\n            <input\n              type=\"password\"\n              placeholder=\"password\"\n              ref={passwordRef}\n              id=\"password\"\n            />\n            <input\n              type=\"password\"\n              placeholder=\"confirm password\"\n              ref={passwordConfirmRef}\n              id=\"password-confirm\"\n            />\n            <button disabled={loading}>Sign Up</button>\n          </form> */}\n            </FormStyle>\n          </div>\n          <div className=\"col-md-6 overflow-hidden\">\n            <img className=\"img-fluid \" src=\"/images/employee.svg\" alt=\"\" />\n          </div>\n        </div>\n      </Parent>\n    </>\n  );\n}\n\nconst Parent = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FormStyle = styled.div`\n  max-width: 500px;\n  /* background-color: aqua; */\n  padding: 1rem;\n`;\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\ApplicantLogin.jsx",[],"C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\AvailableJobs.jsx",["356","357"],"import React, { useState, useEffect } from \"react\";\n\n//components\nimport Navbar from \"./Navbar\";\nimport Job from \"./Job\";\nimport { viewJobFromServer } from \"../../Backend/sendRequestToServer\";\n\nexport default function AvailableJobs() {\n  const [jobList, setJobList] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    viewJobFromServer().then((jobList) => {\n      if (jobList.status === 200) setJobList(jobList.result);\n    });\n  }, []);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container p-3\">\n        <h3 className=\"mt-3 mb-4 text-center\">Jobs Available</h3>\n        <div className=\"row m-0\">\n          {jobList\n            ? jobList.map((job, index) => <Job job={job} key={index} />)\n            : \"\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\ViewAppliedJob.jsx",["358","359"],"import React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\n//components\nimport Navbar from \"./Navbar\";\nimport JobApplied from \"./JobApplied\";\nimport {\n  viewAppliedJobFromServer,\n  viewAppliedJobOfCandidateFromServer,\n} from \"../../Backend/sendRequestToServer\";\n\nexport default function ViewAppliedJob() {\n  //states\n  const [appliedJobList, setAppliedJobList] = useState();\n\n  const { currentUser } = useAuth();\n\n  useEffect(() => {\n    viewAppliedJobOfCandidateFromServer(currentUser ?? {}).then(\n      (appliedJobList) => {\n        if (appliedJobList.status === 200)\n          setAppliedJobList(appliedJobList.result);\n      }\n    );\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"container pt-4 pb-4\">\n        <div className=\"mt-3 mb-3\">\n          <h3 className=\"text-center\">Applied Jobs</h3> <br />\n          <div className=\"row m-0\">\n            {appliedJobList\n              ? appliedJobList.map((appliedJob, index) => (\n                  <JobApplied appliedJob={appliedJob} key={index} />\n                ))\n              : \"\"}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\UploadResume.jsx",["360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport clsx from \"clsx\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { green } from \"@material-ui/core/colors\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { useHistory } from \"react-router\";\nimport { useState, useContext, useEffect } from \"react\";\nimport Navbar from \"./Navbar\";\n\nimport swal from \"sweetalert\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport \"./signup.css\";\nimport { editResumeOfUser } from \"../../Backend/sendRequestToServer\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // minWidth: 275,\n    // margin: \"15px 15px 15px 15px\",\n    borderRadius: \"10px\",\n    padding: \"12px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    boxShadow: \"0 5px 10px rgba(0,0,0,0.19), 0 3px 3px rgba(0,0,0,0.21)\",\n  },\n  form: {\n    margin: \"15px 15px 15px 15px\",\n    borderRadius: \"10px\",\n    padding: \"12px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  pos: {\n    marginTop: 20,\n  },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  label: {\n    color: \"#000\",\n  },\n\n  textField: {\n    \"& .MuiInputBase-input\": {\n      color: \"#000\",\n    },\n  },\n\n  errMsg: {\n    color: \"red\",\n    fontWeight: \"bold\",\n    fontSize: \"small\",\n    marginBottom: \"10px\",\n    textAlign: \"left\",\n  },\n}));\n\nconst UploadResume = (props) => {\n  let history = useHistory();\n  const [showSpinner, setShowSpinner] = React.useState(false);\n  const handleReset = () => {\n    history.push(\"/\");\n  };\n  const { currentUser, setUserDetails } = useAuth();\n  const storage = firebase.storage();\n\n  const classes = useStyles();\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n        backgroundColor: \"#fff\",\n        color: \"#000\",\n      },\n    },\n  };\n\n  const [resume, setResume] = useState();\n  const [fileChosen, setFileChosen] = useState(\"No file chosen\");\n\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // custom button\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n      backgroundColor: \"#FCBF00\",\n      \"&:hover\": {\n        backgroundColor: \"#FCBF00\",\n      },\n    },\n  }))(Button);\n\n  function handleFileChange(e) {\n    setResume(e.target.files[0]);\n    setFileChosen(e.target.files[0].name);\n  }\n\n  async function uploadResume() {\n    setLoading(true);\n    const uploadTask = storage\n      .ref(`resume/${currentUser.emailId}-${fileChosen}`)\n      .put(resume);\n    const url = await (await uploadTask).ref.getDownloadURL();\n    console.log(url);\n    // await signup(email, password);\n    const res = await editResumeOfUser({\n      emailId: currentUser.emailId,\n      resumeUrl: url,\n    });\n\n    if (res.status === 200) {\n      let user = { ...currentUser, resumeUrl: res.resumeUrl };\n      setUserDetails(user);\n      setLoading(false);\n      swal(\"Success!\", \"Resume Uploaded\", \"success\");\n    } else {\n      setLoading(false);\n      console.log(res);\n      swal(\"Failed!\", \"Failed to create User. Try Again!!!\", \"error\");\n    }\n    return url;\n  }\n  return (\n    <>\n      <Navbar />\n      <div className=\"container mt-5 pt-5\">\n        <div className=\"row align-items-center justify-content-center\">\n          <div className=\"col-12 col-md-6\">\n            <Card className={classes.root} variant=\"outlined\">\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  Upload Resume\n                </Typography>\n                <form className={classes.form} noValidate autoComplete=\"off\">\n                  <div className=\"mt-3 mb-3\">\n                    <input\n                      accept=\".pdf\"\n                      type=\"file\"\n                      id=\"actual-btn\"\n                      hidden\n                      onChange={handleFileChange}\n                    />\n                    <label id=\"upload-label\" for=\"actual-btn\">\n                      Choose File\n                    </label>\n                    <span id=\"file-chosen\">{fileChosen}</span>\n                  </div>\n\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={(e) => {\n                      console.log(\"upload function\");\n                      uploadResume(e);\n                    }}\n                  >\n                    Upload\n                  </Button>\n                  <br />\n                </form>\n              </CardContent>\n              <div>\n                {loading ? (\n                  <div>\n                    <span style={{ marginLeft: \"10px\", color: \"#ff0000\" }}>\n                      <h5>Please DO NOT REFRESH the page...</h5>\n                    </span>\n                    <CircularProgress\n                      style={{\n                        color: \"#18D26E\",\n                      }}\n                    />\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n              <CardActions\n                style={{ justifyContent: \"center\", fontWeight: \"bold\" }}\n              ></CardActions>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadResume;\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\Common\\Constants.js",[],"C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\Navbar.jsx",["400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416"],"import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  IconButton,\r\n  Drawer,\r\n  Link,\r\n  MenuItem,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport TrendingFlatIcon from \"@material-ui/icons/TrendingFlat\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport ViewAgendaIcon from \"@material-ui/icons/ViewAgenda\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nimport { EmojiObjects, ExpandLess, ExpandMore } from \"@material-ui/icons\";\r\nimport \"./Navbar.css\";\r\nimport { drawerCollapseable } from \"../../Common/Constants\";\r\nimport { useAuth } from \"../../contexts/AuthContext\";\r\nimport { getPrevilegesFromServer } from \"../../Backend/sendRequestToServer\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  header: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    padding: \"5px\",\r\n    // paddingRight: \"79px\",\r\n    // paddingLeft: \"118px\",\r\n    \"@media (max-width: 900px)\": {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  menuButton: {\r\n    fontFamily: \"Roboto\",\r\n    size: \"18px\",\r\n    marginLeft: \"38px\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  drawerContainer: {\r\n    padding: \"10px 15px\",\r\n    width: \"275px\",\r\n  },\r\n  closeIcon: {\r\n    position: \"absolute\",\r\n    top: 0,\r\n    right: 0,\r\n    paddingRight: \"10px\",\r\n    paddingTop: \"10px\",\r\n    color: \"#18D26E\",\r\n  },\r\n  menuButtonList: {\r\n    marginRight: \"auto\",\r\n    float: \"right\",\r\n  },\r\n}));\r\n\r\nconst GetEmail = () => {\r\n  const { currentUser } = useAuth();\r\n\r\n  return (\r\n    <span>\r\n      Welcome,{\" \"}\r\n      <span style={{ color: \"#18D26E\" }}>\r\n        {currentUser ? currentUser.userName : \"\"}\r\n        <p></p>\r\n      </span>\r\n      <p>\r\n        Role: <b>{currentUser ? currentUser.role : \"\"}</b>\r\n      </p>\r\n      <span className=\"mr-3\">\r\n        Email: <b>{currentUser ? currentUser.emailId : \"\"}</b>\r\n      </span>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default function Navbar() {\r\n  const {\r\n    header,\r\n    logo,\r\n    menuButton,\r\n    toolbar,\r\n    drawerContainer,\r\n    closeIcon,\r\n    menuButtonList,\r\n  } = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  });\r\n  const history = useHistory();\r\n  const { currentUser, logout } = useAuth();\r\n\r\n  const [previleges, setPrevileges] = useState([]);\r\n\r\n  let publicUrl = process.env.PUBLIC_URL + \"/\";\r\n\r\n  const { mobileView, drawerOpen } = state;\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n\r\n    getPrevilegesList();\r\n  }, []);\r\n\r\n  //Get list of previleges from localstorage or Server\r\n  const getPrevilegesList = async () => {\r\n    let prev = JSON.parse(localStorage.getItem(\"previleges\"));\r\n    if (prev === undefined || prev === null) {\r\n      const res = await getPrevilegesFromServer(currentUser.role); //API call to get Previleges\r\n      if (res.status === 200) {\r\n        prev = res.previleges;\r\n        localStorage.setItem(\"previleges\", JSON.stringify(prev));\r\n      }\r\n    }\r\n    // let prevObj = {};\r\n    // prev.forEach((val) => {\r\n    //   prevObj[val] = 1;\r\n    // });\r\n    // let finalPrev = [];\r\n    // for(let previlege of Object.keys(drawerCollapseable)){\r\n    //   if(prevObj[previlege]){\r\n    //     finalPrev.push(previlege);\r\n    //   }\r\n    // }\r\n    setPrevileges(prev);\r\n  };\r\n\r\n  //  handle drawer open and close\r\n  const handleDrawerOpen = () =>\r\n    setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n  const handleDrawerClose = () =>\r\n    setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n\r\n  const drawer = () => {\r\n    return (\r\n      <>\r\n        <Drawer\r\n          {...{\r\n            anchor: \"left\",\r\n            open: drawerOpen,\r\n            onClose: handleDrawerClose,\r\n          }}\r\n        >\r\n          <div className=\"mt-2\">\r\n            <span className={closeIcon}>\r\n              <ClearIcon onClick={handleDrawerClose} />\r\n            </span>\r\n\r\n            <div className={drawerContainer}>{getNewDrawer()}</div>\r\n          </div>\r\n        </Drawer>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const displayDesktop = () => {\r\n    return (\r\n      <Toolbar>\r\n        <IconButton\r\n          {...{\r\n            edge: \"start\",\r\n            color: \"inherit\",\r\n            \"aria-label\": \"menu\",\r\n            \"aria-haspopup\": \"true\",\r\n            onClick: handleDrawerOpen,\r\n          }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        {drawer()}\r\n\r\n        <div style={{ marginLeft: \"auto\" }}>{getMenuButtons()}</div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const displayMobile = () => {\r\n    return (\r\n      <Toolbar>\r\n        <IconButton\r\n          {...{\r\n            edge: \"start\",\r\n            color: \"inherit\",\r\n            \"aria-label\": \"menu\",\r\n            \"aria-haspopup\": \"true\",\r\n            onClick: handleDrawerOpen,\r\n          }}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n\r\n        {drawer()}\r\n        <div style={{ marginLeft: \"auto\" }}>{getMenuButtons()}</div>\r\n      </Toolbar>\r\n    );\r\n  };\r\n\r\n  const getNewDrawer = () => {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <Divider />\r\n        <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\r\n          {previleges &&\r\n            previleges.map((previlege, index) => {\r\n              {\r\n                /* console.log(previlege, drawerCollapseable); */\r\n              }\r\n              let updatePrev =\r\n                previlege === \"Add Role\"\r\n                  ? \"Assign role and permission\"\r\n                  : previlege === \"View Role\"\r\n                  ? \"View role and permission\"\r\n                  : previlege;\r\n              if (drawerCollapseable[previlege]) {\r\n                return (\r\n                  <>\r\n                    <ListItem\r\n                      key={index}\r\n                      button\r\n                      {...{\r\n                        component: RouterLink,\r\n                        to: `${drawerCollapseable[previlege]}`,\r\n                        color: \"inherit\",\r\n                        style: {\r\n                          textDecoration: \"none\",\r\n                          color: \"black\",\r\n                        },\r\n                      }}\r\n                    >\r\n                      <ListItemIcon>\r\n                        <img\r\n                          alt=\"logo\"\r\n                          width=\"30px\"\r\n                          src={publicUrl + \"images/empIcon.png\"}\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Typography style={{ fontWeight: \"Bold\" }}>\r\n                            {updatePrev}\r\n                          </Typography>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                    <Divider />\r\n                  </>\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n        </List>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getMenuButtons = () => {\r\n    return (\r\n      <div>\r\n        <li className=\"menu-item-has-children\">\r\n          <PersonIcon size=\"large\" />\r\n          <ul className=\"sub-menu\">\r\n            <li>\r\n              <GetEmail />\r\n            </li>\r\n            <li>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={(e) => {\r\n                  console.log(\"log out user fuction \");\r\n                  logout();\r\n                  history.push(\"/\");\r\n                }}\r\n              >\r\n                Log Out\r\n              </Button>\r\n              &nbsp;\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={(e) => {\r\n                  history.push(\"/reset-password\");\r\n                }}\r\n              >\r\n                Reset Password\r\n              </Button>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar className={header}>\r\n        {mobileView ? displayMobile() : displayDesktop()}\r\n      </AppBar>\r\n      <div className=\"mt-5\"></div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\Job.jsx",["417","418","419","420","421","422","423","424"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\n//material UI\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport { Divider } from \"@material-ui/core\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n//components\nimport swal from \"sweetalert\";\nimport { addAppliedJob } from \"../../Backend/sendRequestToServer\";\nimport { useAuth } from \"../../contexts/AuthContext\";\n\nexport default function Job({ job }) {\n  const [open, setOpen] = React.useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const { currentUser } = useAuth();\n\n  const handleApplySubmit = async (jobName, appliedJobId) => {\n    // setError(\"\");\n    setLoading(true);\n    const values = {\n      name: currentUser.userName,\n      phone: currentUser.number,\n      email: currentUser.emailId,\n      uid: currentUser ? currentUser.id : \"\",\n      jobName: jobName ? jobName : \"\",\n      appliedJobId: appliedJobId ?? \"\",\n      employerEmail: job.employerEmail ?? \"\",\n    };\n\n    const res = await addAppliedJob(values);\n\n    if (res.resStatus === 200) {\n      setLoading(false);\n      swal(\"Success!\", \"Applied Job Added\", \"success\").then((value) => {\n        history.push(\"/view-applied-jobs\");\n      });\n    } else {\n      console.log(res);\n      setLoading(false);\n      swal(\"Failed!\", \"Failed to Add Job. Try Again!!!\", \"error\");\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"col-12\">\n      <div className=\"m-1\">\n        <div className=\"border shadow-sm rounded-lg p-3\">\n          <h4 className=\"mb-2\">{job.title}</h4>\n          <div className=\"row m-0\">\n            <div className=\"col-6\">\n              <div className=\"mb-3 badge badge-primary\">{job.type}</div>\n            </div>\n            <div className=\"col-6 text-right small\">\n              <div>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={() => handleApplySubmit(job.title, job.id)}\n                  size=\"small\"\n                >\n                  Apply Job\n                </Button>\n              </div>\n            </div>\n          </div>\n          <div className=\"row m-0 mb-3 small\">\n            <div className=\"col-4 p-0\">\n              <LocationOnIcon fontSize=\"small\" /> {job.city}\n            </div>\n            <div className=\"col-4 p-0\">\n              <PersonIcon fontSize=\"small\" /> Openings: {job.openings}\n            </div>\n\n            <div className=\"col-4 p-0\">\n              <AttachMoneyIcon fontSize=\"small\" /> CTC: ₹{job.ctc}\n            </div>\n          </div>\n          <div className=\"mb-2 small\">\n            <span className=\"font-weight-bold\">Skills</span>\n            <br />\n            {job.skills}\n          </div>\n          <div className=\"small mb-3\">{job.description}</div>\n          <Divider />\n          <div className=\"small mt-2\">\n            <span className=\"font-weight-bold\">Contact:</span>{\" \"}\n            {job.employerEmail}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\Navbar.jsx",["425","426","427","428"],"import React, { useState } from \"react\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\n\nexport default function Navbar() {\n  const [error, setError] = useState(\"\");\n  const { currentUser, logout } = useAuth();\n  const history = useHistory();\n\n  async function handleLogout() {\n    setError(\"\");\n\n    try {\n      await logout();\n      history.push(\"/applicant-login\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark shadow-sm\">\n        <div className=\"container\">\n          <div className=\"navbar-brand font-weight-bolder\">Recruit</div>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse \" id=\"navbarNav\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <a\n                  href={\n                    currentUser && currentUser.resumeUrl\n                      ? currentUser.resumeUrl\n                      : \"#\"\n                  }\n                  target=\"_blank\"\n                  className=\"nav-link text-white mr-2 font-weight-bold small\"\n                >\n                  View Resume\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  to=\"/upload-resume\"\n                  className=\"nav-link text-white mr-2 font-weight-bold small\"\n                >\n                  Upload Resume\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  to=\"/available-jobs\"\n                  className=\"nav-link text-white mr-2 font-weight-bold small\"\n                >\n                  Jobs\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link\n                  to=\"/view-applied-jobs\"\n                  className=\"nav-link text-white mr-2 small font-weight-bold\"\n                >\n                  Applied Jobs\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-sm btn-outline-warning\"\n                  onClick={(e) => {\n                    history.push(\"/reset-password\");\n                  }}\n                >\n                  Reset Password\n                </button>\n              </li>\n              <li className=\"nav-item\">\n                <button\n                  className=\"btn btn-sm btn-outline-success\"\n                  onClick={handleLogout}\n                >\n                  Log Out\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <div className=\"container\">\n        <div className=\"text-right text-muted small mt-3 \">\n          Logged In as:\n          <br />\n          <span className=\"font-weight-bold\">\n            {currentUser ? currentUser.userName : \"\"}\n          </span>\n        </div>\n      </div>\n    </>\n  );\n}\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\applicant\\JobApplied.jsx",[],"C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\Job.jsx",["429","430","431"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//material UI\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\r\n\r\nexport default function Job({ job }) {\r\n  return (\r\n    <div className=\"col-12\">\r\n      <div className=\"border shadow-sm rounded-lg p-3 m-2\">\r\n        <h4 className=\"mb-2\">{job.title}</h4>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"mb-3 badge badge-primary\">{job.type}</div>\r\n          </div>\r\n          {/* <div className=\"col-6 text-right\">\r\n            <Link\r\n              to=\"/view-candidates\"\r\n              className=\"small bg-primary text-white font-weight-bold pl-2 pr-2 rounded-pill text-decoration-none pb-1\"\r\n            >\r\n              View Candidates\r\n            </Link>\r\n          </div> */}\r\n        </div>\r\n        <div className=\"row m-0 mb-3 small\">\r\n          <div className=\"col-4 p-0\">\r\n            <LocationOnIcon fontSize=\"small\" /> {job.city}\r\n          </div>\r\n          <div className=\"col-4 p-0\">\r\n            <PersonIcon fontSize=\"small\" /> Openings: {job.openings}\r\n          </div>\r\n\r\n          <div className=\"col-4 p-0\">\r\n            <AttachMoneyIcon fontSize=\"small\" /> CTC: ₹{job.ctc}\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-2 small\">\r\n          <span className=\"font-weight-bold\">Skills</span>\r\n          <br />\r\n          {job.skills}\r\n        </div>\r\n        <div className=\"small\">{job.description}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\parve\\Desktop\\job portal cod\\job-portal-react-main\\src\\components\\employer\\Candidates.jsx",["432"],"import React, { useEffect } from \"react\";\n\n//material UI\nimport PhoneAndroidIcon from \"@material-ui/icons/PhoneAndroid\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport { Button } from \"@material-ui/core\";\nimport { addAppliedJob } from \"../../Backend/sendRequestToServer\";\nimport swal from \"sweetalert\";\nimport \"./candidates.css\";\n\nexport default function Candidates({ appliedjob }) {\n  const updateJob = async (status) => {\n    const res = await addAppliedJob({ ...appliedjob, status });\n\n    if (res.resStatus === 200) {\n      // setLoading(false);\n      swal(\"Success!\", \"Job Status Changed\", \"success\").then((value) => {\n        window.location.reload();\n      });\n    } else {\n      console.log(res);\n      // setLoading(false);\n      swal(\"Failed!\", \"Failed to Add Job. Try Again!!!\", \"error\");\n    }\n  };\n\n  const Status = ({ status }) => {\n    if (status === \"Accepted\") {\n      return <h6 style={{ color: \"green\", fontSize: \"18px\" }}>{status}</h6>;\n    } else if (status === \"Rejected\") {\n      return <h6 style={{ color: \"red\", fontSize: \"18px\" }}>{status}</h6>;\n    } else\n      return <h6 style={{ color: \"orange\", fontSize: \"18px\" }}>Pending</h6>;\n  };\n\n  const showResume = (resumeUrl) => {\n    console.log(resumeUrl);\n    window.open(resumeUrl, \"_blank\");\n  };\n  return (\n    <div className=\"col-md-6 col-12\">\n      <div className=\"border shadow-sm rounded-lg p-3 m-1\">\n        <h5 className=\"\">{appliedjob.name}</h5>\n        <div className=\"small\">Applied for: {appliedjob.jobName}</div>\n        <br />\n        <h6>Contact Details:</h6>\n        <div>\n          <EmailIcon fontSize=\"small\" /> {appliedjob.email}\n        </div>\n        <div>\n          <PhoneAndroidIcon fontSize=\"small\" /> {appliedjob.phone}\n        </div>\n        <br />\n        <div className=\"mt-2\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => showResume(appliedjob.resumeUrl)}\n          >\n            Show Resume\n          </Button>\n          &emsp;\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            href={`mailto:${appliedjob.email}`}\n          >\n            Send Invite\n          </Button>\n        </div>\n        <br />\n        {!appliedjob.status || appliedjob.status === \"Pending\" ? (\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => updateJob(\"Accepted\")}\n            >\n              Accept\n            </Button>\n            &nbsp;\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => updateJob(\"Rejected\")}\n            >\n              Reject\n            </Button>\n            &nbsp;\n          </div>\n        ) : (\n          <Status status={appliedjob.status} />\n        )}\n      </div>\n    </div>\n  );\n}\n",{"ruleId":"433","severity":1,"message":"434","line":2,"column":10,"nodeType":"435","messageId":"436","endLine":2,"endColumn":20},{"ruleId":"433","severity":1,"message":"437","line":4,"column":3,"nodeType":"435","messageId":"436","endLine":4,"endColumn":27},{"ruleId":"433","severity":1,"message":"438","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":17},{"ruleId":"433","severity":1,"message":"438","line":1,"column":10,"nodeType":"435","messageId":"436","endLine":1,"endColumn":17},{"ruleId":"433","severity":1,"message":"439","line":24,"column":11,"nodeType":"435","messageId":"436","endLine":24,"endColumn":13},{"ruleId":"433","severity":1,"message":"439","line":159,"column":11,"nodeType":"435","messageId":"436","endLine":159,"endColumn":13},{"ruleId":"433","severity":1,"message":"440","line":298,"column":5,"nodeType":"435","messageId":"436","endLine":298,"endColumn":8},{"ruleId":"441","severity":1,"message":"442","line":306,"column":22,"nodeType":"443","messageId":"444","endLine":306,"endColumn":24},{"ruleId":"433","severity":1,"message":"445","line":3,"column":22,"nodeType":"435","messageId":"436","endLine":3,"endColumn":33},{"ruleId":"446","severity":1,"message":"447","line":22,"column":6,"nodeType":"448","endLine":22,"endColumn":8,"suggestions":"449"},{"ruleId":"433","severity":1,"message":"450","line":4,"column":10,"nodeType":"435","messageId":"436","endLine":4,"endColumn":23},{"ruleId":"433","severity":1,"message":"451","line":4,"column":25,"nodeType":"435","messageId":"436","endLine":4,"endColumn":39},{"ruleId":"433","severity":1,"message":"452","line":11,"column":8,"nodeType":"435","messageId":"436","endLine":11,"endColumn":14},{"ruleId":"433","severity":1,"message":"453","line":12,"column":8,"nodeType":"435","messageId":"436","endLine":12,"endColumn":13},{"ruleId":"433","severity":1,"message":"454","line":13,"column":8,"nodeType":"435","messageId":"436","endLine":13,"endColumn":12},{"ruleId":"433","severity":1,"message":"455","line":15,"column":8,"nodeType":"435","messageId":"436","endLine":15,"endColumn":16},{"ruleId":"433","severity":1,"message":"456","line":16,"column":8,"nodeType":"435","messageId":"436","endLine":16,"endColumn":16},{"ruleId":"433","severity":1,"message":"457","line":17,"column":8,"nodeType":"435","messageId":"436","endLine":17,"endColumn":19},{"ruleId":"433","severity":1,"message":"458","line":18,"column":8,"nodeType":"435","messageId":"436","endLine":18,"endColumn":18},{"ruleId":"433","severity":1,"message":"459","line":19,"column":8,"nodeType":"435","messageId":"436","endLine":19,"endColumn":20},{"ruleId":"433","severity":1,"message":"460","line":20,"column":8,"nodeType":"435","messageId":"436","endLine":20,"endColumn":24},{"ruleId":"433","severity":1,"message":"461","line":21,"column":8,"nodeType":"435","messageId":"436","endLine":21,"endColumn":14},{"ruleId":"433","severity":1,"message":"462","line":22,"column":8,"nodeType":"435","messageId":"436","endLine":22,"endColumn":21},{"ruleId":"433","severity":1,"message":"463","line":23,"column":8,"nodeType":"435","messageId":"436","endLine":23,"endColumn":21},{"ruleId":"433","severity":1,"message":"464","line":24,"column":8,"nodeType":"435","messageId":"436","endLine":24,"endColumn":25},{"ruleId":"433","severity":1,"message":"465","line":25,"column":8,"nodeType":"435","messageId":"436","endLine":25,"endColumn":19},{"ruleId":"433","severity":1,"message":"466","line":26,"column":10,"nodeType":"435","messageId":"436","endLine":26,"endColumn":15},{"ruleId":"433","severity":1,"message":"467","line":27,"column":8,"nodeType":"435","messageId":"436","endLine":27,"endColumn":17},{"ruleId":"433","severity":1,"message":"468","line":28,"column":8,"nodeType":"435","messageId":"436","endLine":28,"endColumn":24},{"ruleId":"433","severity":1,"message":"469","line":29,"column":8,"nodeType":"435","messageId":"436","endLine":29,"endColumn":32},{"ruleId":"433","severity":1,"message":"470","line":30,"column":8,"nodeType":"435","messageId":"436","endLine":30,"endColumn":20},{"ruleId":"433","severity":1,"message":"471","line":31,"column":8,"nodeType":"435","messageId":"436","endLine":31,"endColumn":16},{"ruleId":"433","severity":1,"message":"472","line":32,"column":8,"nodeType":"435","messageId":"436","endLine":32,"endColumn":22},{"ruleId":"433","severity":1,"message":"473","line":34,"column":8,"nodeType":"435","messageId":"436","endLine":34,"endColumn":17},{"ruleId":"433","severity":1,"message":"474","line":35,"column":8,"nodeType":"435","messageId":"436","endLine":35,"endColumn":24},{"ruleId":"433","severity":1,"message":"475","line":36,"column":8,"nodeType":"435","messageId":"436","endLine":36,"endColumn":24},{"ruleId":"433","severity":1,"message":"476","line":37,"column":8,"nodeType":"435","messageId":"436","endLine":37,"endColumn":22},{"ruleId":"433","severity":1,"message":"477","line":39,"column":8,"nodeType":"435","messageId":"436","endLine":39,"endColumn":13},{"ruleId":"433","severity":1,"message":"478","line":40,"column":8,"nodeType":"435","messageId":"436","endLine":40,"endColumn":12},{"ruleId":"433","severity":1,"message":"479","line":43,"column":20,"nodeType":"435","messageId":"436","endLine":43,"endColumn":30},{"ruleId":"433","severity":1,"message":"480","line":43,"column":32,"nodeType":"435","messageId":"436","endLine":43,"endColumn":41},{"ruleId":"433","severity":1,"message":"481","line":44,"column":10,"nodeType":"435","messageId":"436","endLine":44,"endColumn":28},{"ruleId":"433","severity":1,"message":"482","line":45,"column":8,"nodeType":"435","messageId":"436","endLine":45,"endColumn":14},{"ruleId":"433","severity":1,"message":"483","line":47,"column":3,"nodeType":"435","messageId":"436","endLine":47,"endColumn":10},{"ruleId":"433","severity":1,"message":"484","line":48,"column":3,"nodeType":"435","messageId":"436","endLine":48,"endColumn":17},{"ruleId":"433","severity":1,"message":"485","line":52,"column":3,"nodeType":"435","messageId":"436","endLine":52,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":98,"column":3,"nodeType":"488","messageId":"444","endLine":98,"endColumn":6},{"ruleId":"433","severity":1,"message":"489","line":126,"column":11,"nodeType":"435","messageId":"436","endLine":126,"endColumn":22},{"ruleId":"433","severity":1,"message":"490","line":133,"column":9,"nodeType":"435","messageId":"436","endLine":133,"endColumn":18},{"ruleId":"433","severity":1,"message":"491","line":221,"column":9,"nodeType":"435","messageId":"436","endLine":221,"endColumn":22},{"ruleId":"492","severity":1,"message":"493","line":223,"column":29,"nodeType":"494","messageId":"495","endLine":223,"endColumn":30,"suggestions":"496"},{"ruleId":"492","severity":1,"message":"493","line":223,"column":54,"nodeType":"494","messageId":"495","endLine":223,"endColumn":55,"suggestions":"497"},{"ruleId":"492","severity":1,"message":"493","line":223,"column":63,"nodeType":"494","messageId":"495","endLine":223,"endColumn":64,"suggestions":"498"},{"ruleId":"492","severity":1,"message":"493","line":223,"column":67,"nodeType":"494","messageId":"495","endLine":223,"endColumn":68,"suggestions":"499"},{"ruleId":"433","severity":1,"message":"500","line":227,"column":9,"nodeType":"435","messageId":"436","endLine":227,"endColumn":22},{"ruleId":"433","severity":1,"message":"501","line":244,"column":9,"nodeType":"435","messageId":"436","endLine":244,"endColumn":13},{"ruleId":"502","severity":1,"message":"503","line":327,"column":25,"nodeType":"504","messageId":"505","endLine":327,"endColumn":50},{"ruleId":"433","severity":1,"message":"506","line":1,"column":27,"nodeType":"435","messageId":"436","endLine":1,"endColumn":33},{"ruleId":"433","severity":1,"message":"507","line":32,"column":9,"nodeType":"435","messageId":"436","endLine":32,"endColumn":16},{"ruleId":"433","severity":1,"message":"508","line":34,"column":9,"nodeType":"435","messageId":"436","endLine":34,"endColumn":20},{"ruleId":"433","severity":1,"message":"509","line":38,"column":12,"nodeType":"435","messageId":"436","endLine":38,"endColumn":28},{"ruleId":"433","severity":1,"message":"510","line":50,"column":12,"nodeType":"435","messageId":"436","endLine":50,"endColumn":24},{"ruleId":"433","severity":1,"message":"511","line":57,"column":9,"nodeType":"435","messageId":"436","endLine":57,"endColumn":20},{"ruleId":"433","severity":1,"message":"450","line":4,"column":10,"nodeType":"435","messageId":"436","endLine":4,"endColumn":23},{"ruleId":"433","severity":1,"message":"451","line":4,"column":25,"nodeType":"435","messageId":"436","endLine":4,"endColumn":39},{"ruleId":"433","severity":1,"message":"452","line":11,"column":8,"nodeType":"435","messageId":"436","endLine":11,"endColumn":14},{"ruleId":"433","severity":1,"message":"453","line":12,"column":8,"nodeType":"435","messageId":"436","endLine":12,"endColumn":13},{"ruleId":"433","severity":1,"message":"454","line":13,"column":8,"nodeType":"435","messageId":"436","endLine":13,"endColumn":12},{"ruleId":"433","severity":1,"message":"456","line":16,"column":8,"nodeType":"435","messageId":"436","endLine":16,"endColumn":16},{"ruleId":"433","severity":1,"message":"457","line":17,"column":8,"nodeType":"435","messageId":"436","endLine":17,"endColumn":19},{"ruleId":"433","severity":1,"message":"458","line":18,"column":8,"nodeType":"435","messageId":"436","endLine":18,"endColumn":18},{"ruleId":"433","severity":1,"message":"459","line":19,"column":8,"nodeType":"435","messageId":"436","endLine":19,"endColumn":20},{"ruleId":"433","severity":1,"message":"460","line":20,"column":8,"nodeType":"435","messageId":"436","endLine":20,"endColumn":24},{"ruleId":"433","severity":1,"message":"464","line":24,"column":8,"nodeType":"435","messageId":"436","endLine":24,"endColumn":25},{"ruleId":"433","severity":1,"message":"466","line":26,"column":10,"nodeType":"435","messageId":"436","endLine":26,"endColumn":15},{"ruleId":"433","severity":1,"message":"469","line":29,"column":8,"nodeType":"435","messageId":"436","endLine":29,"endColumn":32},{"ruleId":"433","severity":1,"message":"470","line":30,"column":8,"nodeType":"435","messageId":"436","endLine":30,"endColumn":20},{"ruleId":"433","severity":1,"message":"471","line":31,"column":8,"nodeType":"435","messageId":"436","endLine":31,"endColumn":16},{"ruleId":"433","severity":1,"message":"472","line":32,"column":8,"nodeType":"435","messageId":"436","endLine":32,"endColumn":22},{"ruleId":"433","severity":1,"message":"477","line":39,"column":8,"nodeType":"435","messageId":"436","endLine":39,"endColumn":13},{"ruleId":"433","severity":1,"message":"478","line":40,"column":8,"nodeType":"435","messageId":"436","endLine":40,"endColumn":12},{"ruleId":"433","severity":1,"message":"479","line":43,"column":20,"nodeType":"435","messageId":"436","endLine":43,"endColumn":30},{"ruleId":"433","severity":1,"message":"481","line":44,"column":10,"nodeType":"435","messageId":"436","endLine":44,"endColumn":28},{"ruleId":"486","severity":1,"message":"487","line":91,"column":3,"nodeType":"488","messageId":"444","endLine":91,"endColumn":6},{"ruleId":"433","severity":1,"message":"512","line":116,"column":10,"nodeType":"435","messageId":"436","endLine":116,"endColumn":21},{"ruleId":"433","severity":1,"message":"513","line":116,"column":23,"nodeType":"435","messageId":"436","endLine":116,"endColumn":33},{"ruleId":"433","severity":1,"message":"514","line":131,"column":24,"nodeType":"435","messageId":"436","endLine":131,"endColumn":39},{"ruleId":"433","severity":1,"message":"515","line":132,"column":10,"nodeType":"435","messageId":"436","endLine":132,"endColumn":21},{"ruleId":"433","severity":1,"message":"516","line":132,"column":23,"nodeType":"435","messageId":"436","endLine":132,"endColumn":37},{"ruleId":"433","severity":1,"message":"517","line":133,"column":10,"nodeType":"435","messageId":"436","endLine":133,"endColumn":25},{"ruleId":"433","severity":1,"message":"518","line":133,"column":27,"nodeType":"435","messageId":"436","endLine":133,"endColumn":45},{"ruleId":"433","severity":1,"message":"519","line":134,"column":10,"nodeType":"435","messageId":"436","endLine":134,"endColumn":21},{"ruleId":"433","severity":1,"message":"520","line":134,"column":23,"nodeType":"435","messageId":"436","endLine":134,"endColumn":37},{"ruleId":"446","severity":1,"message":"521","line":147,"column":6,"nodeType":"448","endLine":147,"endColumn":8,"suggestions":"522"},{"ruleId":"433","severity":1,"message":"490","line":159,"column":9,"nodeType":"435","messageId":"436","endLine":159,"endColumn":18},{"ruleId":"492","severity":1,"message":"493","line":291,"column":29,"nodeType":"494","messageId":"495","endLine":291,"endColumn":30,"suggestions":"523"},{"ruleId":"492","severity":1,"message":"493","line":291,"column":54,"nodeType":"494","messageId":"495","endLine":291,"endColumn":55,"suggestions":"524"},{"ruleId":"492","severity":1,"message":"493","line":291,"column":63,"nodeType":"494","messageId":"495","endLine":291,"endColumn":64,"suggestions":"525"},{"ruleId":"492","severity":1,"message":"493","line":291,"column":67,"nodeType":"494","messageId":"495","endLine":291,"endColumn":68,"suggestions":"526"},{"ruleId":"433","severity":1,"message":"501","line":312,"column":9,"nodeType":"435","messageId":"436","endLine":312,"endColumn":13},{"ruleId":"433","severity":1,"message":"527","line":4,"column":3,"nodeType":"435","messageId":"436","endLine":4,"endColumn":21},{"ruleId":"446","severity":1,"message":"528","line":31,"column":6,"nodeType":"448","endLine":31,"endColumn":8,"suggestions":"529"},{"ruleId":"433","severity":1,"message":"508","line":46,"column":9,"nodeType":"435","messageId":"436","endLine":46,"endColumn":20},{"ruleId":"502","severity":1,"message":"503","line":189,"column":21,"nodeType":"504","messageId":"505","endLine":189,"endColumn":47},{"ruleId":"433","severity":1,"message":"480","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":26},{"ruleId":"433","severity":1,"message":"530","line":1,"column":28,"nodeType":"435","messageId":"436","endLine":1,"endColumn":36},{"ruleId":"433","severity":1,"message":"531","line":2,"column":10,"nodeType":"435","messageId":"436","endLine":2,"endColumn":15},{"ruleId":"433","severity":1,"message":"532","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":20},{"ruleId":"433","severity":1,"message":"533","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":14},{"ruleId":"433","severity":1,"message":"534","line":5,"column":8,"nodeType":"435","messageId":"436","endLine":5,"endColumn":18},{"ruleId":"433","severity":1,"message":"535","line":6,"column":8,"nodeType":"435","messageId":"436","endLine":6,"endColumn":18},{"ruleId":"433","severity":1,"message":"536","line":7,"column":8,"nodeType":"435","messageId":"436","endLine":7,"endColumn":18},{"ruleId":"433","severity":1,"message":"537","line":8,"column":10,"nodeType":"435","messageId":"436","endLine":8,"endColumn":20},{"ruleId":"433","severity":1,"message":"434","line":9,"column":10,"nodeType":"435","messageId":"436","endLine":9,"endColumn":20},{"ruleId":"433","severity":1,"message":"538","line":12,"column":3,"nodeType":"435","messageId":"436","endLine":12,"endColumn":23},{"ruleId":"433","severity":1,"message":"485","line":13,"column":3,"nodeType":"435","messageId":"436","endLine":13,"endColumn":21},{"ruleId":"446","severity":1,"message":"539","line":19,"column":6,"nodeType":"448","endLine":19,"endColumn":8,"suggestions":"540"},{"ruleId":"433","severity":1,"message":"450","line":4,"column":10,"nodeType":"435","messageId":"436","endLine":4,"endColumn":23},{"ruleId":"433","severity":1,"message":"451","line":4,"column":25,"nodeType":"435","messageId":"436","endLine":4,"endColumn":39},{"ruleId":"433","severity":1,"message":"452","line":11,"column":8,"nodeType":"435","messageId":"436","endLine":11,"endColumn":14},{"ruleId":"433","severity":1,"message":"453","line":12,"column":8,"nodeType":"435","messageId":"436","endLine":12,"endColumn":13},{"ruleId":"433","severity":1,"message":"454","line":13,"column":8,"nodeType":"435","messageId":"436","endLine":13,"endColumn":12},{"ruleId":"433","severity":1,"message":"455","line":15,"column":8,"nodeType":"435","messageId":"436","endLine":15,"endColumn":16},{"ruleId":"433","severity":1,"message":"457","line":17,"column":8,"nodeType":"435","messageId":"436","endLine":17,"endColumn":19},{"ruleId":"433","severity":1,"message":"458","line":18,"column":8,"nodeType":"435","messageId":"436","endLine":18,"endColumn":18},{"ruleId":"433","severity":1,"message":"459","line":19,"column":8,"nodeType":"435","messageId":"436","endLine":19,"endColumn":20},{"ruleId":"433","severity":1,"message":"460","line":20,"column":8,"nodeType":"435","messageId":"436","endLine":20,"endColumn":24},{"ruleId":"433","severity":1,"message":"461","line":21,"column":8,"nodeType":"435","messageId":"436","endLine":21,"endColumn":14},{"ruleId":"433","severity":1,"message":"462","line":22,"column":8,"nodeType":"435","messageId":"436","endLine":22,"endColumn":21},{"ruleId":"433","severity":1,"message":"463","line":23,"column":8,"nodeType":"435","messageId":"436","endLine":23,"endColumn":21},{"ruleId":"433","severity":1,"message":"464","line":24,"column":8,"nodeType":"435","messageId":"436","endLine":24,"endColumn":25},{"ruleId":"433","severity":1,"message":"465","line":25,"column":8,"nodeType":"435","messageId":"436","endLine":25,"endColumn":19},{"ruleId":"433","severity":1,"message":"466","line":26,"column":10,"nodeType":"435","messageId":"436","endLine":26,"endColumn":15},{"ruleId":"433","severity":1,"message":"467","line":27,"column":8,"nodeType":"435","messageId":"436","endLine":27,"endColumn":17},{"ruleId":"433","severity":1,"message":"468","line":28,"column":8,"nodeType":"435","messageId":"436","endLine":28,"endColumn":24},{"ruleId":"433","severity":1,"message":"469","line":29,"column":8,"nodeType":"435","messageId":"436","endLine":29,"endColumn":32},{"ruleId":"433","severity":1,"message":"470","line":30,"column":8,"nodeType":"435","messageId":"436","endLine":30,"endColumn":20},{"ruleId":"433","severity":1,"message":"471","line":31,"column":8,"nodeType":"435","messageId":"436","endLine":31,"endColumn":16},{"ruleId":"433","severity":1,"message":"472","line":32,"column":8,"nodeType":"435","messageId":"436","endLine":32,"endColumn":22},{"ruleId":"433","severity":1,"message":"473","line":34,"column":8,"nodeType":"435","messageId":"436","endLine":34,"endColumn":17},{"ruleId":"433","severity":1,"message":"474","line":35,"column":8,"nodeType":"435","messageId":"436","endLine":35,"endColumn":24},{"ruleId":"433","severity":1,"message":"475","line":36,"column":8,"nodeType":"435","messageId":"436","endLine":36,"endColumn":24},{"ruleId":"433","severity":1,"message":"476","line":37,"column":8,"nodeType":"435","messageId":"436","endLine":37,"endColumn":22},{"ruleId":"433","severity":1,"message":"477","line":39,"column":8,"nodeType":"435","messageId":"436","endLine":39,"endColumn":13},{"ruleId":"433","severity":1,"message":"478","line":40,"column":8,"nodeType":"435","messageId":"436","endLine":40,"endColumn":12},{"ruleId":"433","severity":1,"message":"479","line":43,"column":20,"nodeType":"435","messageId":"436","endLine":43,"endColumn":30},{"ruleId":"433","severity":1,"message":"481","line":44,"column":10,"nodeType":"435","messageId":"436","endLine":44,"endColumn":28},{"ruleId":"486","severity":1,"message":"487","line":95,"column":3,"nodeType":"488","messageId":"444","endLine":95,"endColumn":6},{"ruleId":"433","severity":1,"message":"513","line":120,"column":23,"nodeType":"435","messageId":"436","endLine":120,"endColumn":33},{"ruleId":"433","severity":1,"message":"514","line":137,"column":24,"nodeType":"435","messageId":"436","endLine":137,"endColumn":39},{"ruleId":"433","severity":1,"message":"516","line":138,"column":23,"nodeType":"435","messageId":"436","endLine":138,"endColumn":37},{"ruleId":"433","severity":1,"message":"517","line":139,"column":10,"nodeType":"435","messageId":"436","endLine":139,"endColumn":25},{"ruleId":"433","severity":1,"message":"518","line":139,"column":27,"nodeType":"435","messageId":"436","endLine":139,"endColumn":45},{"ruleId":"433","severity":1,"message":"520","line":140,"column":23,"nodeType":"435","messageId":"436","endLine":140,"endColumn":37},{"ruleId":"433","severity":1,"message":"541","line":143,"column":10,"nodeType":"435","messageId":"436","endLine":143,"endColumn":18},{"ruleId":"446","severity":1,"message":"542","line":155,"column":6,"nodeType":"448","endLine":155,"endColumn":8,"suggestions":"543"},{"ruleId":"433","severity":1,"message":"544","line":157,"column":9,"nodeType":"435","messageId":"436","endLine":157,"endColumn":22},{"ruleId":"433","severity":1,"message":"545","line":162,"column":10,"nodeType":"435","messageId":"436","endLine":162,"endColumn":14},{"ruleId":"433","severity":1,"message":"490","line":167,"column":9,"nodeType":"435","messageId":"436","endLine":167,"endColumn":18},{"ruleId":"433","severity":1,"message":"546","line":186,"column":9,"nodeType":"435","messageId":"436","endLine":186,"endColumn":24},{"ruleId":"433","severity":1,"message":"547","line":190,"column":9,"nodeType":"435","messageId":"436","endLine":190,"endColumn":20},{"ruleId":"492","severity":1,"message":"493","line":292,"column":29,"nodeType":"494","messageId":"495","endLine":292,"endColumn":30,"suggestions":"548"},{"ruleId":"492","severity":1,"message":"493","line":292,"column":54,"nodeType":"494","messageId":"495","endLine":292,"endColumn":55,"suggestions":"549"},{"ruleId":"492","severity":1,"message":"493","line":292,"column":63,"nodeType":"494","messageId":"495","endLine":292,"endColumn":64,"suggestions":"550"},{"ruleId":"492","severity":1,"message":"493","line":292,"column":67,"nodeType":"494","messageId":"495","endLine":292,"endColumn":68,"suggestions":"551"},{"ruleId":"433","severity":1,"message":"501","line":313,"column":9,"nodeType":"435","messageId":"436","endLine":313,"endColumn":13},{"ruleId":"433","severity":1,"message":"507","line":32,"column":9,"nodeType":"435","messageId":"436","endLine":32,"endColumn":16},{"ruleId":"433","severity":1,"message":"508","line":34,"column":9,"nodeType":"435","messageId":"436","endLine":34,"endColumn":20},{"ruleId":"433","severity":1,"message":"509","line":38,"column":12,"nodeType":"435","messageId":"436","endLine":38,"endColumn":28},{"ruleId":"433","severity":1,"message":"511","line":50,"column":9,"nodeType":"435","messageId":"436","endLine":50,"endColumn":20},{"ruleId":"433","severity":1,"message":"450","line":4,"column":10,"nodeType":"435","messageId":"436","endLine":4,"endColumn":23},{"ruleId":"433","severity":1,"message":"451","line":4,"column":25,"nodeType":"435","messageId":"436","endLine":4,"endColumn":39},{"ruleId":"433","severity":1,"message":"452","line":11,"column":8,"nodeType":"435","messageId":"436","endLine":11,"endColumn":14},{"ruleId":"433","severity":1,"message":"453","line":12,"column":8,"nodeType":"435","messageId":"436","endLine":12,"endColumn":13},{"ruleId":"433","severity":1,"message":"454","line":13,"column":8,"nodeType":"435","messageId":"436","endLine":13,"endColumn":12},{"ruleId":"433","severity":1,"message":"455","line":15,"column":8,"nodeType":"435","messageId":"436","endLine":15,"endColumn":16},{"ruleId":"433","severity":1,"message":"456","line":16,"column":8,"nodeType":"435","messageId":"436","endLine":16,"endColumn":16},{"ruleId":"433","severity":1,"message":"457","line":17,"column":8,"nodeType":"435","messageId":"436","endLine":17,"endColumn":19},{"ruleId":"433","severity":1,"message":"458","line":18,"column":8,"nodeType":"435","messageId":"436","endLine":18,"endColumn":18},{"ruleId":"433","severity":1,"message":"459","line":19,"column":8,"nodeType":"435","messageId":"436","endLine":19,"endColumn":20},{"ruleId":"433","severity":1,"message":"460","line":20,"column":8,"nodeType":"435","messageId":"436","endLine":20,"endColumn":24},{"ruleId":"433","severity":1,"message":"461","line":21,"column":8,"nodeType":"435","messageId":"436","endLine":21,"endColumn":14},{"ruleId":"433","severity":1,"message":"462","line":22,"column":8,"nodeType":"435","messageId":"436","endLine":22,"endColumn":21},{"ruleId":"433","severity":1,"message":"463","line":23,"column":8,"nodeType":"435","messageId":"436","endLine":23,"endColumn":21},{"ruleId":"433","severity":1,"message":"464","line":24,"column":8,"nodeType":"435","messageId":"436","endLine":24,"endColumn":25},{"ruleId":"433","severity":1,"message":"465","line":25,"column":8,"nodeType":"435","messageId":"436","endLine":25,"endColumn":19},{"ruleId":"433","severity":1,"message":"466","line":26,"column":10,"nodeType":"435","messageId":"436","endLine":26,"endColumn":15},{"ruleId":"433","severity":1,"message":"467","line":27,"column":8,"nodeType":"435","messageId":"436","endLine":27,"endColumn":17},{"ruleId":"433","severity":1,"message":"468","line":28,"column":8,"nodeType":"435","messageId":"436","endLine":28,"endColumn":24},{"ruleId":"433","severity":1,"message":"469","line":29,"column":8,"nodeType":"435","messageId":"436","endLine":29,"endColumn":32},{"ruleId":"433","severity":1,"message":"470","line":30,"column":8,"nodeType":"435","messageId":"436","endLine":30,"endColumn":20},{"ruleId":"433","severity":1,"message":"471","line":31,"column":8,"nodeType":"435","messageId":"436","endLine":31,"endColumn":16},{"ruleId":"433","severity":1,"message":"472","line":32,"column":8,"nodeType":"435","messageId":"436","endLine":32,"endColumn":22},{"ruleId":"433","severity":1,"message":"473","line":34,"column":8,"nodeType":"435","messageId":"436","endLine":34,"endColumn":17},{"ruleId":"433","severity":1,"message":"474","line":35,"column":8,"nodeType":"435","messageId":"436","endLine":35,"endColumn":24},{"ruleId":"433","severity":1,"message":"475","line":36,"column":8,"nodeType":"435","messageId":"436","endLine":36,"endColumn":24},{"ruleId":"433","severity":1,"message":"476","line":37,"column":8,"nodeType":"435","messageId":"436","endLine":37,"endColumn":22},{"ruleId":"433","severity":1,"message":"477","line":39,"column":8,"nodeType":"435","messageId":"436","endLine":39,"endColumn":13},{"ruleId":"433","severity":1,"message":"478","line":40,"column":8,"nodeType":"435","messageId":"436","endLine":40,"endColumn":12},{"ruleId":"433","severity":1,"message":"479","line":43,"column":20,"nodeType":"435","messageId":"436","endLine":43,"endColumn":30},{"ruleId":"433","severity":1,"message":"480","line":43,"column":32,"nodeType":"435","messageId":"436","endLine":43,"endColumn":41},{"ruleId":"433","severity":1,"message":"481","line":44,"column":10,"nodeType":"435","messageId":"436","endLine":44,"endColumn":28},{"ruleId":"433","severity":1,"message":"483","line":47,"column":3,"nodeType":"435","messageId":"436","endLine":47,"endColumn":10},{"ruleId":"433","severity":1,"message":"485","line":49,"column":3,"nodeType":"435","messageId":"436","endLine":49,"endColumn":21},{"ruleId":"486","severity":1,"message":"487","line":95,"column":3,"nodeType":"488","messageId":"444","endLine":95,"endColumn":6},{"ruleId":"433","severity":1,"message":"490","line":130,"column":9,"nodeType":"435","messageId":"436","endLine":130,"endColumn":18},{"ruleId":"433","severity":1,"message":"491","line":178,"column":9,"nodeType":"435","messageId":"436","endLine":178,"endColumn":22},{"ruleId":"492","severity":1,"message":"493","line":180,"column":29,"nodeType":"494","messageId":"495","endLine":180,"endColumn":30,"suggestions":"552"},{"ruleId":"492","severity":1,"message":"493","line":180,"column":54,"nodeType":"494","messageId":"495","endLine":180,"endColumn":55,"suggestions":"553"},{"ruleId":"492","severity":1,"message":"493","line":180,"column":63,"nodeType":"494","messageId":"495","endLine":180,"endColumn":64,"suggestions":"554"},{"ruleId":"492","severity":1,"message":"493","line":180,"column":67,"nodeType":"494","messageId":"495","endLine":180,"endColumn":68,"suggestions":"555"},{"ruleId":"433","severity":1,"message":"500","line":184,"column":9,"nodeType":"435","messageId":"436","endLine":184,"endColumn":22},{"ruleId":"433","severity":1,"message":"501","line":201,"column":9,"nodeType":"435","messageId":"436","endLine":201,"endColumn":13},{"ruleId":"502","severity":1,"message":"503","line":239,"column":21,"nodeType":"504","messageId":"505","endLine":239,"endColumn":46},{"ruleId":"433","severity":1,"message":"556","line":24,"column":11,"nodeType":"435","messageId":"436","endLine":24,"endColumn":17},{"ruleId":"433","severity":1,"message":"557","line":10,"column":10,"nodeType":"435","messageId":"436","endLine":10,"endColumn":17},{"ruleId":"433","severity":1,"message":"558","line":10,"column":19,"nodeType":"435","messageId":"436","endLine":10,"endColumn":29},{"ruleId":"433","severity":1,"message":"559","line":8,"column":3,"nodeType":"435","messageId":"436","endLine":8,"endColumn":27},{"ruleId":"446","severity":1,"message":"560","line":25,"column":6,"nodeType":"448","endLine":25,"endColumn":8,"suggestions":"561"},{"ruleId":"433","severity":1,"message":"450","line":4,"column":10,"nodeType":"435","messageId":"436","endLine":4,"endColumn":23},{"ruleId":"433","severity":1,"message":"451","line":4,"column":25,"nodeType":"435","messageId":"436","endLine":4,"endColumn":39},{"ruleId":"433","severity":1,"message":"562","line":10,"column":8,"nodeType":"435","messageId":"436","endLine":10,"endColumn":17},{"ruleId":"433","severity":1,"message":"452","line":11,"column":8,"nodeType":"435","messageId":"436","endLine":11,"endColumn":14},{"ruleId":"433","severity":1,"message":"453","line":12,"column":8,"nodeType":"435","messageId":"436","endLine":12,"endColumn":13},{"ruleId":"433","severity":1,"message":"454","line":13,"column":8,"nodeType":"435","messageId":"436","endLine":13,"endColumn":12},{"ruleId":"433","severity":1,"message":"455","line":15,"column":8,"nodeType":"435","messageId":"436","endLine":15,"endColumn":16},{"ruleId":"433","severity":1,"message":"456","line":16,"column":8,"nodeType":"435","messageId":"436","endLine":16,"endColumn":16},{"ruleId":"433","severity":1,"message":"457","line":17,"column":8,"nodeType":"435","messageId":"436","endLine":17,"endColumn":19},{"ruleId":"433","severity":1,"message":"458","line":18,"column":8,"nodeType":"435","messageId":"436","endLine":18,"endColumn":18},{"ruleId":"433","severity":1,"message":"459","line":19,"column":8,"nodeType":"435","messageId":"436","endLine":19,"endColumn":20},{"ruleId":"433","severity":1,"message":"460","line":20,"column":8,"nodeType":"435","messageId":"436","endLine":20,"endColumn":24},{"ruleId":"433","severity":1,"message":"461","line":21,"column":8,"nodeType":"435","messageId":"436","endLine":21,"endColumn":14},{"ruleId":"433","severity":1,"message":"462","line":22,"column":8,"nodeType":"435","messageId":"436","endLine":22,"endColumn":21},{"ruleId":"433","severity":1,"message":"463","line":23,"column":8,"nodeType":"435","messageId":"436","endLine":23,"endColumn":21},{"ruleId":"433","severity":1,"message":"464","line":24,"column":8,"nodeType":"435","messageId":"436","endLine":24,"endColumn":25},{"ruleId":"433","severity":1,"message":"465","line":25,"column":8,"nodeType":"435","messageId":"436","endLine":25,"endColumn":19},{"ruleId":"433","severity":1,"message":"466","line":26,"column":10,"nodeType":"435","messageId":"436","endLine":26,"endColumn":15},{"ruleId":"433","severity":1,"message":"467","line":27,"column":8,"nodeType":"435","messageId":"436","endLine":27,"endColumn":17},{"ruleId":"433","severity":1,"message":"468","line":28,"column":8,"nodeType":"435","messageId":"436","endLine":28,"endColumn":24},{"ruleId":"433","severity":1,"message":"469","line":29,"column":8,"nodeType":"435","messageId":"436","endLine":29,"endColumn":32},{"ruleId":"433","severity":1,"message":"470","line":30,"column":8,"nodeType":"435","messageId":"436","endLine":30,"endColumn":20},{"ruleId":"433","severity":1,"message":"471","line":31,"column":8,"nodeType":"435","messageId":"436","endLine":31,"endColumn":16},{"ruleId":"433","severity":1,"message":"472","line":32,"column":8,"nodeType":"435","messageId":"436","endLine":32,"endColumn":22},{"ruleId":"433","severity":1,"message":"473","line":34,"column":8,"nodeType":"435","messageId":"436","endLine":34,"endColumn":17},{"ruleId":"433","severity":1,"message":"474","line":35,"column":8,"nodeType":"435","messageId":"436","endLine":35,"endColumn":24},{"ruleId":"433","severity":1,"message":"475","line":36,"column":8,"nodeType":"435","messageId":"436","endLine":36,"endColumn":24},{"ruleId":"433","severity":1,"message":"476","line":37,"column":8,"nodeType":"435","messageId":"436","endLine":37,"endColumn":22},{"ruleId":"433","severity":1,"message":"477","line":39,"column":8,"nodeType":"435","messageId":"436","endLine":39,"endColumn":13},{"ruleId":"433","severity":1,"message":"478","line":40,"column":8,"nodeType":"435","messageId":"436","endLine":40,"endColumn":12},{"ruleId":"433","severity":1,"message":"479","line":43,"column":20,"nodeType":"435","messageId":"436","endLine":43,"endColumn":30},{"ruleId":"433","severity":1,"message":"480","line":43,"column":32,"nodeType":"435","messageId":"436","endLine":43,"endColumn":41},{"ruleId":"486","severity":1,"message":"487","line":94,"column":3,"nodeType":"488","messageId":"444","endLine":94,"endColumn":6},{"ruleId":"433","severity":1,"message":"563","line":118,"column":10,"nodeType":"435","messageId":"436","endLine":118,"endColumn":21},{"ruleId":"433","severity":1,"message":"564","line":118,"column":23,"nodeType":"435","messageId":"436","endLine":118,"endColumn":37},{"ruleId":"433","severity":1,"message":"508","line":119,"column":9,"nodeType":"435","messageId":"436","endLine":119,"endColumn":20},{"ruleId":"433","severity":1,"message":"490","line":130,"column":9,"nodeType":"435","messageId":"436","endLine":130,"endColumn":18},{"ruleId":"433","severity":1,"message":"565","line":144,"column":10,"nodeType":"435","messageId":"436","endLine":144,"endColumn":15},{"ruleId":"433","severity":1,"message":"566","line":144,"column":17,"nodeType":"435","messageId":"436","endLine":144,"endColumn":25},{"ruleId":"433","severity":1,"message":"511","line":149,"column":9,"nodeType":"435","messageId":"436","endLine":149,"endColumn":20},{"ruleId":"433","severity":1,"message":"567","line":9,"column":3,"nodeType":"435","messageId":"436","endLine":9,"endColumn":7},{"ruleId":"433","severity":1,"message":"456","line":10,"column":3,"nodeType":"435","messageId":"436","endLine":10,"endColumn":11},{"ruleId":"433","severity":1,"message":"568","line":15,"column":3,"nodeType":"435","messageId":"436","endLine":15,"endColumn":11},{"ruleId":"433","severity":1,"message":"536","line":20,"column":8,"nodeType":"435","messageId":"436","endLine":20,"endColumn":18},{"ruleId":"433","severity":1,"message":"569","line":21,"column":8,"nodeType":"435","messageId":"436","endLine":21,"endColumn":24},{"ruleId":"433","severity":1,"message":"570","line":22,"column":8,"nodeType":"435","messageId":"436","endLine":22,"endColumn":16},{"ruleId":"433","severity":1,"message":"571","line":23,"column":8,"nodeType":"435","messageId":"436","endLine":23,"endColumn":16},{"ruleId":"433","severity":1,"message":"572","line":26,"column":8,"nodeType":"435","messageId":"436","endLine":26,"endColumn":22},{"ruleId":"433","severity":1,"message":"573","line":29,"column":10,"nodeType":"435","messageId":"436","endLine":29,"endColumn":22},{"ruleId":"433","severity":1,"message":"574","line":29,"column":24,"nodeType":"435","messageId":"436","endLine":29,"endColumn":34},{"ruleId":"433","severity":1,"message":"575","line":29,"column":36,"nodeType":"435","messageId":"436","endLine":29,"endColumn":46},{"ruleId":"433","severity":1,"message":"576","line":96,"column":5,"nodeType":"435","messageId":"436","endLine":96,"endColumn":9},{"ruleId":"433","severity":1,"message":"577","line":97,"column":5,"nodeType":"435","messageId":"436","endLine":97,"endColumn":15},{"ruleId":"433","severity":1,"message":"578","line":98,"column":5,"nodeType":"435","messageId":"436","endLine":98,"endColumn":12},{"ruleId":"433","severity":1,"message":"579","line":101,"column":5,"nodeType":"435","messageId":"436","endLine":101,"endColumn":19},{"ruleId":"446","severity":1,"message":"580","line":129,"column":6,"nodeType":"448","endLine":129,"endColumn":8,"suggestions":"581"},{"ruleId":"582","severity":1,"message":"583","line":233,"column":15,"nodeType":"584","messageId":"585","endLine":235,"endColumn":16},{"ruleId":"433","severity":1,"message":"567","line":2,"column":10,"nodeType":"435","messageId":"436","endLine":2,"endColumn":14},{"ruleId":"433","severity":1,"message":"461","line":11,"column":8,"nodeType":"435","messageId":"436","endLine":11,"endColumn":14},{"ruleId":"433","severity":1,"message":"462","line":12,"column":8,"nodeType":"435","messageId":"436","endLine":12,"endColumn":21},{"ruleId":"433","severity":1,"message":"463","line":13,"column":8,"nodeType":"435","messageId":"436","endLine":13,"endColumn":21},{"ruleId":"433","severity":1,"message":"465","line":14,"column":8,"nodeType":"435","messageId":"436","endLine":14,"endColumn":19},{"ruleId":"433","severity":1,"message":"545","line":22,"column":10,"nodeType":"435","messageId":"436","endLine":22,"endColumn":14},{"ruleId":"433","severity":1,"message":"557","line":23,"column":10,"nodeType":"435","messageId":"436","endLine":23,"endColumn":17},{"ruleId":"433","severity":1,"message":"547","line":55,"column":9,"nodeType":"435","messageId":"436","endLine":55,"endColumn":20},{"ruleId":"433","severity":1,"message":"586","line":3,"column":16,"nodeType":"435","messageId":"436","endLine":3,"endColumn":24},{"ruleId":"433","severity":1,"message":"533","line":4,"column":10,"nodeType":"435","messageId":"436","endLine":4,"endColumn":16},{"ruleId":"433","severity":1,"message":"565","line":7,"column":10,"nodeType":"435","messageId":"436","endLine":7,"endColumn":15},{"ruleId":"587","severity":1,"message":"588","line":41,"column":17,"nodeType":"589","messageId":"590","endLine":49,"endColumn":18,"fix":"591"},{"ruleId":"433","severity":1,"message":"530","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":25},{"ruleId":"433","severity":1,"message":"480","line":1,"column":27,"nodeType":"435","messageId":"436","endLine":1,"endColumn":36},{"ruleId":"433","severity":1,"message":"567","line":2,"column":10,"nodeType":"435","messageId":"436","endLine":2,"endColumn":14},{"ruleId":"433","severity":1,"message":"480","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":26},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'candidateLoginWithServer' is defined but never used.","'useAuth' is defined but never used.","'id' is assigned a value but never used.","'jwt' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.","ArrayExpression",["592"],"'ThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'Select' is defined but never used.","'Input' is defined but never used.","'clsx' is defined but never used.","'Checkbox' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'ListItemText' is defined but never used.","'TextareaAutosize' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'green' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'CheckBoxOutlineBlankIcon' is defined but never used.","'CheckBoxIcon' is defined but never used.","'Favorite' is defined but never used.","'FavoriteBorder' is defined but never used.","'Accordion' is defined but never used.","'AccordionSummary' is defined but never used.","'AccordionDetails' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'drawerCollapseable' is defined but never used.","'Navbar' is defined but never used.","'addUser' is defined but never used.","'changePassword' is defined but never used.","'viewRoleFromServer' is defined but never used.","no-dupe-keys","Duplicate key 'pos'.","ObjectExpression","'currentUser' is assigned a value but never used.","'MenuProps' is assigned a value but never used.","'validateEmail' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["593","594"],["595","596"],["597","598"],["599","600"],"'validatePhone' is assigned a value but never used.","'bull' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useRef' is defined but never used.","'classes' is assigned a value but never used.","'handleReset' is assigned a value but never used.","'checkIfSalesUser' is defined but never used.","'EditEmployee' is defined but never used.","'ColorButton' is assigned a value but never used.","'showPassErr' is assigned a value but never used.","'setPassErr' is assigned a value but never used.","'setShowTitleErr' is assigned a value but never used.","'showDescErr' is assigned a value but never used.","'setShowDescErr' is assigned a value but never used.","'showLocationErr' is assigned a value but never used.","'setShowLocationErr' is assigned a value but never used.","'showQualErr' is assigned a value but never used.","'setShowQualErr' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isEdit', 'state.role.permission_Arr', 'state.role.role', and 'state.role.roleDescription'. Either include them or remove the dependency array.",["601"],["602","603"],["604","605"],["606","607"],["608","609"],"'viewUserFromServer' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser.emailId' and 'currentUser.role'. Either include them or remove the dependency array.",["610"],"'useState' is defined but never used.","'Media' is defined but never used.","'withStyles' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'DeleteIcon' is defined but never used.","'CreateIcon' is defined but never used.","'makeStyles' is defined but never used.","'deleteRoleFromServer' is defined but never used.","React Hook useEffect has a missing dependency: 'getAppliedJobs'. Either include it or remove the dependency array.",["611"],"'expanded' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isEdit' and 'state.user'. Either include them or remove the dependency array.",["612"],"'handleChangex' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["613","614"],["615","616"],["617","618"],["619","620"],["621","622"],["623","624"],["625","626"],["627","628"],"'signup' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'viewAppliedJobFromServer' is defined but never used.","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["629"],"'TextField' is defined but never used.","'showSpinner' is assigned a value but never used.","'setShowSpinner' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","'Link' is defined but never used.","'Collapse' is defined but never used.","'TrendingFlatIcon' is defined but never used.","'WorkIcon' is defined but never used.","'InfoIcon' is defined but never used.","'ViewAgendaIcon' is defined but never used.","'EmojiObjects' is defined but never used.","'ExpandLess' is defined but never used.","'ExpandMore' is defined but never used.","'logo' is assigned a value but never used.","'menuButton' is assigned a value but never used.","'toolbar' is assigned a value but never used.","'menuButtonList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPrevilegesList'. Either include it or remove the dependency array.",["630"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Redirect' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"631","text":"632"},{"desc":"633","fix":"634"},{"messageId":"635","fix":"636","desc":"637"},{"messageId":"638","fix":"639","desc":"640"},{"messageId":"635","fix":"641","desc":"637"},{"messageId":"638","fix":"642","desc":"640"},{"messageId":"635","fix":"643","desc":"637"},{"messageId":"638","fix":"644","desc":"640"},{"messageId":"635","fix":"645","desc":"637"},{"messageId":"638","fix":"646","desc":"640"},{"desc":"647","fix":"648"},{"messageId":"635","fix":"649","desc":"637"},{"messageId":"638","fix":"650","desc":"640"},{"messageId":"635","fix":"651","desc":"637"},{"messageId":"638","fix":"652","desc":"640"},{"messageId":"635","fix":"653","desc":"637"},{"messageId":"638","fix":"654","desc":"640"},{"messageId":"635","fix":"655","desc":"637"},{"messageId":"638","fix":"656","desc":"640"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"messageId":"635","fix":"663","desc":"637"},{"messageId":"638","fix":"664","desc":"640"},{"messageId":"635","fix":"665","desc":"637"},{"messageId":"638","fix":"666","desc":"640"},{"messageId":"635","fix":"667","desc":"637"},{"messageId":"638","fix":"668","desc":"640"},{"messageId":"635","fix":"669","desc":"637"},{"messageId":"638","fix":"670","desc":"640"},{"messageId":"635","fix":"671","desc":"637"},{"messageId":"638","fix":"672","desc":"640"},{"messageId":"635","fix":"673","desc":"637"},{"messageId":"638","fix":"674","desc":"640"},{"messageId":"635","fix":"675","desc":"637"},{"messageId":"638","fix":"676","desc":"640"},{"messageId":"635","fix":"677","desc":"637"},{"messageId":"638","fix":"678","desc":"640"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},[1573,1573]," rel=\"noreferrer\"","Update the dependencies array to be: [params]",{"range":"683","text":"684"},"removeEscape",{"range":"685","text":"686"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"687","text":"688"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"689","text":"686"},{"range":"690","text":"688"},{"range":"691","text":"686"},{"range":"692","text":"688"},{"range":"693","text":"686"},{"range":"694","text":"688"},"Update the dependencies array to be: [isEdit, state.role.permission_Arr, state.role.role, state.role.roleDescription]",{"range":"695","text":"696"},{"range":"697","text":"686"},{"range":"698","text":"688"},{"range":"699","text":"686"},{"range":"700","text":"688"},{"range":"701","text":"686"},{"range":"702","text":"688"},{"range":"703","text":"686"},{"range":"704","text":"688"},"Update the dependencies array to be: [currentUser.emailId, currentUser.role]",{"range":"705","text":"706"},"Update the dependencies array to be: [getAppliedJobs]",{"range":"707","text":"708"},"Update the dependencies array to be: [isEdit, state.user]",{"range":"709","text":"710"},{"range":"711","text":"686"},{"range":"712","text":"688"},{"range":"713","text":"686"},{"range":"714","text":"688"},{"range":"715","text":"686"},{"range":"716","text":"688"},{"range":"717","text":"686"},{"range":"718","text":"688"},{"range":"719","text":"686"},{"range":"720","text":"688"},{"range":"721","text":"686"},{"range":"722","text":"688"},{"range":"723","text":"686"},{"range":"724","text":"688"},{"range":"725","text":"686"},{"range":"726","text":"688"},"Update the dependencies array to be: [currentUser]",{"range":"727","text":"728"},"Update the dependencies array to be: [getPrevilegesList]",{"range":"729","text":"730"},[751,753],"[params]",[6080,6081],"",[6080,6080],"\\",[6105,6106],[6105,6105],[6114,6115],[6114,6114],[6118,6119],[6118,6118],[4869,4871],"[isEdit, state.role.permission_Arr, state.role.role, state.role.roleDescription]",[8663,8664],[8663,8663],[8688,8689],[8688,8688],[8697,8698],[8697,8697],[8701,8702],[8701,8701],[804,806],"[currentUser.emailId, currentUser.role]",[483,485],"[getAppliedJobs]",[4750,4752],"[isEdit, state.user]",[8059,8060],[8059,8059],[8084,8085],[8084,8084],[8093,8094],[8093,8093],[8097,8098],[8097,8097],[5182,5183],[5182,5182],[5207,5208],[5207,5207],[5216,5217],[5216,5216],[5220,5221],[5220,5220],[690,692],"[currentUser]",[3208,3210],"[getPrevilegesList]"]